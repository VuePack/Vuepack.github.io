<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Leon&#39;s Daily</title>
  <subtitle>爱折腾，爱旅游，热爱生活</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://likr.cn/"/>
  <updated>2016-12-24T14:50:18.000Z</updated>
  <id>http://likr.cn/</id>
  
  <author>
    <name>里昂</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《2016年终总结》</title>
    <link href="http://likr.cn/2016/12/21/%E3%80%8A2016%E5%B9%B4%E7%BB%88%E7%BB%88%E7%BB%93%E3%80%8B/"/>
    <id>http://likr.cn/2016/12/21/《2016年终终结》/</id>
    <published>2016-12-21T07:49:06.000Z</published>
    <updated>2016-12-24T14:50:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><img class="full-image" src="https://ohv0hyr4v.qnssl.com/coffeebg.jpg"></p>
<h2 id="回顾下2015年给2016年定的计划："><a href="#回顾下2015年给2016年定的计划：" class="headerlink" title="回顾下2015年给2016年定的计划："></a>回顾下2015年给2016年定的计划：</h2><ul>
<li>1.完成一款大型单页应用WebApp（<strong>未完成：</strong>不想找理由，懒！）</li>
<li>2.一年一次的旅行（<strong>未完成：</strong>腰🙄）</li>
<li>3.一周两次的健身（<strong>未完成：</strong>腰🙄）</li>
<li>4.<del>驾驶证考出</del></li>
<li>5.<del>尝试室内设计</del></li>
</ul>
<a id="more"></a>
<h2 id="再来看看2016年做的"><a href="#再来看看2016年做的" class="headerlink" title="再来看看2016年做的"></a>再来看看2016年做的</h2><ul>
<li>看的书<ul>
<li><strong>《编写可维护的 JavaScript 》</strong>（还行，大部分再讲编码规范细节，有些知识已经过时）</li>
<li><strong>《你不知道的 JavaScript 上卷》</strong>（非常棒的一本书，强烈推荐，包含很多基础的底层原理）</li>
<li><strong>《CSS 揭秘》</strong>（很棒推荐）</li>
<li><strong>《编写高质量代码-Web前端开发修炼之道》</strong>（看的 PDF ，还好，不过很多已经过时）</li>
</ul>
</li>
<li>折腾的技术栈<ul>
<li><code>vue1.0</code> + <code>vuex1.0</code> + <code>vue-router1.0</code> + <code>vue-cli</code>（自己博客简历已升级到 <code>vue2.0</code>）</li>
<li><code>webpack + gulp</code> 脚手架（花了2天学习，折腾到凌晨4：30 ，还好没猝死😊）</li>
<li><code>研究大型复杂单页应用</code> （下个移动端项目采用）</li>
<li><code>微信小程序</code> （语法糖参考的是 <code>vue</code> 和 <code>react</code>，比较容易上手，有自己的一套编译文件，组件库，有局限性，不好玩！）</li>
<li>学习<code>ES6</code> 和 <code>组件化</code></li>
</ul>
</li>
<li>参与的知乎live<ul>
<li><strong>《无需意志力的习惯养成方法论》</strong></li>
<li><strong>《前端工程师如何不断自我提升》</strong></li>
<li><strong>《前端开发者成长之路》</strong></li>
<li><strong>《人人都能用英语》</strong></li>
<li><strong>《前端们，贺老 Live 面试你了！》</strong></li>
<li><strong>《好莱坞重量级巨星与你聊电影》</strong></li>
<li><strong>《全栈工程师养成指南》</strong></li>
<li><strong>《重新认识腰椎病》</strong></li>
<li><strong>《前端工程化浅析》</strong></li>
<li><strong>《Nodejs 开发有问必答》</strong></li>
</ul>
</li>
</ul>
<h2 id="2017计划"><a href="#2017计划" class="headerlink" title="2017计划"></a>2017计划</h2><ul>
<li>想买的<ul>
<li><strong>p1 ：</strong> 布置书房的一些 <code>插画</code>，<code>装饰品</code>，<code>灯具</code> 等等</li>
<li><strong>p2 ：</strong> <code>运动版阿特兹</code>，<code>运动版阿特兹</code>，<code>运动版阿特兹</code> ！（<strong>p2任务不完成，p2以下不考虑！</strong>）</li>
<li><strong>p3 ：</strong> <code>头戴式降噪耳机</code> 一直没想好买哪款</li>
<li><strong>p4 ：</strong> <code>SONY ILCE-6000L</code></li>
<li><strong>p5 ：</strong> <code>大疆无人机</code></li>
</ul>
</li>
<li>想学习的<ul>
<li>一直对模型、室内设计比较感兴趣，想学习下 <code>手绘</code></li>
<li>开始耍起 <code>NODE.js</code>，进阶服务端</li>
<li><code>ES6</code> 熟练运用</li>
</ul>
</li>
<li><p>想做的</p>
<ul>
<li><strong>p1 ：</strong> 锻炼腰肌，早睡，更正不良习惯，希望能尽快好起来，旅行，健身</li>
<li><p><strong>p2 ：</strong> 没学过后端语言，虽然现在博客用的是 <code>hexo</code> 托管在 <code>github</code> 。但有强迫症想自己搞一个博客系统。 技术栈也想好了。相信这个博客系统做完，能对所学的技术栈进行一个全面的巩固，当然也避免不了坑，和许多问题😊。<br>前端 ：</p>
<ul>
<li><code>vue2.0</code>（<strong>渐进式响应框架</strong>）</li>
<li><code>vuex2.0</code>（<strong>集中式状态管理</strong>）</li>
<li><code>vue-router2.0</code>（<strong>路由</strong>）</li>
<li><code>vue-resource1.0</code>（<strong>xhr请求</strong>）</li>
<li><code>marked</code> （<strong>Markdown语法解析</strong>）</li>
<li><code>prismjs</code>（<strong>代码高亮</strong>）</li>
</ul>
<p>后端 ：</p>
<ul>
<li><code>node.js</code>（<strong>服务端</strong>）</li>
<li><code>express</code>（<strong>Web应用框架</strong>）</li>
<li><code>LeanCloud</code>（<strong>数据存储</strong>）</li>
</ul>
</li>
<li><p><strong>p3 ：</strong> 为移动端项目构建 <code>前端公共组件库</code>，并<strong>开源</strong> 。（这会比较漫长，也是对自己知识的一个积累）</p>
</li>
<li><strong>p4 ：</strong> 2016年也尝试了 <code>室内设计</code> ，我还是挺期待完工之后的整体效果，后续完工后会写一篇 <strong>《从前端到室内设计》</strong> 哈哈哈 这逼装的🙄</li>
</ul>
</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote>
<p>上半年：</p>
</blockquote>
<p>2016年，算是最好的一年也是最差劲的一年，前半年整个人都是荒废的。由于长期坐姿不良的习惯，腰部肌肉两边受力不均匀，某次健身运动不当导致腰间盘突出，压迫神经。起初真的是痛不欲生，走几步，臀部的经脉伴随着小腿就疼痛，不能久坐，不能长期走路。之前刚离职，在家休息了3月，没想到那么严重。</p>
<p>总之非常谢谢 <code>萱萱女神</code> 推荐的中医。之前去市医院，医生叫我做手术打针。想到要工作，就放弃了做手术，选择了疗养性治疗，针灸。还好现在好了很多，走路不疼了，也能久坐了。</p>
<p>当时也在面试，面了几家公司，也拿到了挺多 <strong>offer</strong> ，本想加入一个成熟型的前端团队。但介于有些太远，或者管理制度比较严，不适合我疗养性治疗，所以也都放弃了，最终选择了宽松的创业公司。</p>
<blockquote>
<p>下半年：</p>
</blockquote>
<p>新公司相处下来，技术团队都很 <code>nice</code>，产品比较逗逼，同事也很棒，公司前端权重重，有成熟的线下资源，也不需要融资。<br>一直都是特立独行的人，讨厌反复劳动，崇尚新技术高效推动。<br>氛围挺融洽，挺符合我的磁场，主动推动团队之间新的技术栈，统一团队之间的开发流程规范，开发团队公共组件库。</p>
<p>总之和一群靠谱的团队，做点有意义的事，公司的快速成长，给自己和别人带来显著增益，如果事成了，顺便也实现了一些小小的梦想，那他妈才是精彩的人生。</p>
<p>做自己想做的，相信明年会更好！ ✌️✌️✌️</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img class=&quot;full-image&quot; src=&quot;https://ohv0hyr4v.qnssl.com/coffeebg.jpg&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;回顾下2015年给2016年定的计划：&quot;&gt;&lt;a href=&quot;#回顾下2015年给2016年定的计划：&quot; class=&quot;headerlink&quot; title=&quot;回顾下2015年给2016年定的计划：&quot;&gt;&lt;/a&gt;回顾下2015年给2016年定的计划：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;1.完成一款大型单页应用WebApp（&lt;strong&gt;未完成：&lt;/strong&gt;不想找理由，懒！）&lt;/li&gt;
&lt;li&gt;2.一年一次的旅行（&lt;strong&gt;未完成：&lt;/strong&gt;腰🙄）&lt;/li&gt;
&lt;li&gt;3.一周两次的健身（&lt;strong&gt;未完成：&lt;/strong&gt;腰🙄）&lt;/li&gt;
&lt;li&gt;4.&lt;del&gt;驾驶证考出&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;5.&lt;del&gt;尝试室内设计&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="心情语录" scheme="http://likr.cn/tags/%E5%BF%83%E6%83%85%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>VUE在购物车的应用场景</title>
    <link href="http://likr.cn/2016/11/26/VUE%E5%9C%A8%E8%B4%AD%E7%89%A9%E8%BD%A6%E7%9A%84%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/"/>
    <id>http://likr.cn/2016/11/26/VUE在购物车的应用场景/</id>
    <published>2016-11-26T09:20:07.000Z</published>
    <updated>2016-12-08T09:47:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="购物车脑图"><a href="#购物车脑图" class="headerlink" title="购物车脑图"></a>购物车脑图</h2><blockquote>
<p>简单大致画了下，一些小细节没包含</p>
</blockquote>
<p><img src="https://ohv0hyr4v.qnssl.com/2016112688583_cart.png" alt="cart.png"><br><a id="more"></a></p>
<h2 id="最终效果图："><a href="#最终效果图：" class="headerlink" title="最终效果图："></a>最终效果图：</h2><p><img src="https://ohv0hyr4v.qnssl.com/2016112621608cart.gif" alt="实例"></p>
<h2 id="数据块"><a href="#数据块" class="headerlink" title="数据块"></a>数据块</h2><p><img src="https://ohv0hyr4v.qnssl.com/2016112625364model.png" alt="model"><br>首次从服务器获取的数据，绑定到 <code>Model</code> 层，然后进行 <code>DOM</code> 编译，渲染到 <code>VIEW</code> 层。<br>每次用户的操作，产生的状态或者数据的变化，不管是 <code>Model</code> 层或者 <code>VIEW</code> 层，都会实时响应，更新视图和数据，保持视图与数据的一致。</p>
<p>这边考虑几点，哪些状态或者数据是唯一的，抽取出来放入 <code>DATA</code> 中。列如：<strong>全选按钮</strong> 、<strong>总金额</strong> 、<strong>总吨数</strong>；</p>
<h2 id="功能块"><a href="#功能块" class="headerlink" title="功能块"></a>功能块</h2><h3 id="select"><a href="#select" class="headerlink" title="select"></a>select</h3><p>多选这栏，之前用的是 <strong>v-model</strong>，双向绑定，现在已被剔除。现在改用 <code>@click</code>事件。<br>考虑以后选择状态会保存在服务器上，与后端协调接口增加 <strong>default</strong> 字段，方便后面的过滤。</p>
<blockquote>
<p>选择这块有几个小细节逻辑，</p>
</blockquote>
<p>1.首次进入购物车，渲染页面的时候，如果当前的商品 <code>default != 1</code>，复选框就不会被选中。<br>2.选中当前的商品会计算响应当前的吨数、价格。若当前没选中，为了防止修改 <code>input</code> 框内的数量，这边我现在是禁止修改的。（😄 偷了个懒）。<br>理论上当前的商品未选中，修改数量，当前的复选框会再次被选中。<br>3.若选中的商品数量等于商品的总数量，那么全选的复选框应该选中。</p>
<blockquote>
<p>code:</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"goods-checkbox"</span>  <span class="attr">:checked</span>=<span class="string">"item.default == 1 ? true : false"</span>  @<span class="attr">click</span>=<span class="string">"isCheck($index,$event)"</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h3><p><code>v-model</code>，这边双向绑定的是 <strong>吨数</strong> 、<strong>包数</strong> 。<br><code>v-model</code> 是不支持 <strong>索引</strong> 的，所以这边我加入了 <code>过滤器</code> ；用于过滤非法字符和整数和小数位。<br>过滤器有两个函数，<code>read</code> 指的是 <code>model -&gt; view</code>, <code>write</code> 指的是 <code>view -&gt; model</code>。这边要注意的是 <code>read</code> 只负责 <code>view</code>层的渲染，<code>write</code> 负责若 <code>model</code>层的更新 ，<code>model</code> 数据没有变化，是不会执行 <code>read</code> 函数。</p>
<p>当前商品吨数计算，这边我直接在 <code>for</code> 循环渲染的列表 <code>html</code>里，放了个 <strong>函数</strong> ，传入当前绑定的 <code>吨数</code> 和 <code>包数</code>,同样价格也一样。</p>
<blockquote>
<p>code:</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">filters: &#123;</div><div class="line">    filterByDot: &#123;</div><div class="line">        <span class="comment">// model -&gt; view</span></div><div class="line">        read: <span class="function"><span class="keyword">function</span>(<span class="params">num</span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> (num == <span class="number">0</span> || <span class="built_in">isNaN</span>(num)) &#123;</div><div class="line">                <span class="keyword">return</span> <span class="string">'0'</span>;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">this</span>.hasDot(num))&#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.dotSplit(num);</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                <span class="keyword">return</span> num;</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="comment">// view -&gt; model</span></div><div class="line">        write: <span class="function"><span class="keyword">function</span>(<span class="params">num</span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> (num == <span class="number">0</span> || <span class="built_in">isNaN</span>(num)) &#123;</div><div class="line">                <span class="keyword">return</span> <span class="string">'0'</span>;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">return</span> num.split(<span class="string">'.'</span>)[<span class="number">0</span>];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    ....</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="delete"><a href="#delete" class="headerlink" title="delete"></a>delete</h3><p>这个简单，不说！</p>
<h3 id="submit"><a href="#submit" class="headerlink" title="submit"></a>submit</h3><p>这个就过滤选中状态数据，也简单不说！</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>多思考，就多个解决方案。话说购物车第一次写，在 PM 需求的变更下，默默的重构了3次！比第一次写的代码量少了一半，坑爹，不过这次的重构感觉颇为满意，加入了不少黑魔法糖，多了些解决思路。</p>
<p>距离年终总结，还是一个月不到了！去年定的 <code>构建大型单页应用商城（webapp）</code> 目标，我才刚画完原型图，干吧得啊！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;购物车脑图&quot;&gt;&lt;a href=&quot;#购物车脑图&quot; class=&quot;headerlink&quot; title=&quot;购物车脑图&quot;&gt;&lt;/a&gt;购物车脑图&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;简单大致画了下，一些小细节没包含&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://ohv0hyr4v.qnssl.com/2016112688583_cart.png&quot; alt=&quot;cart.png&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://likr.cn/tags/JavaScript/"/>
    
      <category term="VUE" scheme="http://likr.cn/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>VUE学习工作笔记</title>
    <link href="http://likr.cn/2016/09/23/VUE%E5%AD%A6%E4%B9%A0%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    <id>http://likr.cn/2016/09/23/VUE学习工作笔记/</id>
    <published>2016-09-23T12:38:11.000Z</published>
    <updated>2016-12-08T09:47:49.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">记录平时学习工作中VUE遇到的问题和总结</blockquote>

<h2 id="常见报错"><a href="#常见报错" class="headerlink" title="常见报错"></a>常见报错</h2><h3 id="更改Attribute属性却没同步视图"><a href="#更改Attribute属性却没同步视图" class="headerlink" title="更改Attribute属性却没同步视图"></a>更改Attribute属性却没同步视图</h3><p>当<code>input[type=&quot;text&quot;]</code> 的 <strong>value值</strong> 绑定数据，其他条件触发改变 <code>input</code> 的 <strong>value值</strong>，虽然看源码 <code>input</code> 的 <strong>value值</strong> 已同步更新，但视图层 <code>input</code> 的框内内容并没有同步!</p>
<blockquote>
<p>解决方法：</p>
</blockquote>
<p>使用 <code>$set</code> 命令，</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// $set 触发视图更新，解决同步Attribute但没同步视图的更新问题</span></div><div class="line">_this.items.$set(index, &#123;</div><div class="line">    stock       : (_this.items[index].stock  + <span class="number">1</span>).toFixed(<span class="number">1</span>),</div><div class="line">    id          : _this.items[index].id,</div><div class="line">    name        : _this.items[index].name,</div><div class="line">    price       : _this.items[index].price,</div><div class="line">    description : _this.items[index].description,</div><div class="line">    warehouse   : _this.items[index].warehouse,</div><div class="line">    total       : this_stock.toFixed(<span class="number">2</span>),</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="网速慢情况下，加载页面出现表达式"><a href="#网速慢情况下，加载页面出现表达式" class="headerlink" title="网速慢情况下，加载页面出现表达式"></a>网速慢情况下，加载页面出现表达式</h3><blockquote>
<p>解决方法：</p>
</blockquote>
<p>在 <strong>表达式</strong> 加入 <code>v-cloak</code>，记住要加CSS！<br>这个指令保持在元素上直到关联实例结束编译</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-attr">[v-cloak]</span> &#123;</div><div class="line">  <span class="attribute">display</span>: none;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-cloak</span>&gt;</span></div><div class="line">  &#123;&#123; message &#125;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="循环插入图片报错"><a href="#循环插入图片报错" class="headerlink" title="循环插入图片报错"></a>循环插入图片报错</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"slide"</span> v-<span class="keyword">for</span>=<span class="string">"item in items"</span>&gt;</div><div class="line">    <span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;item.image&#125;&#125;"</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p>出现 <code>[Vue Warn]: src=&quot;&quot;: interpolation in &quot;src&quot; attribute will cause a 404 request. Use v-bind:src instead.</code><br>告诉我们 <code>“src”</code> 属性插值将导致 <strong>404</strong> 请求。使用<code>v-bind：src</code>代替。</p>
<blockquote>
<p>解决方法：</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"slide"</span> v-<span class="keyword">for</span>=<span class="string">"item in items"</span>&gt;</div><div class="line">    <span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">"item.image"</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="在django页面写VUE表达式冲突"><a href="#在django页面写VUE表达式冲突" class="headerlink" title="在django页面写VUE表达式冲突"></a>在django页面写VUE表达式冲突</h3><blockquote>
<p>解决方法：</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Vue.config.delimiters = [<span class="string">'[['</span>, <span class="string">']]'</span>]</div></pre></td></tr></table></figure>
<h3 id="Vue-warn-v-on-click-”listtime”-expects-a-function-value-got-undefined"><a href="#Vue-warn-v-on-click-”listtime”-expects-a-function-value-got-undefined" class="headerlink" title="[Vue warn]: v-on:click=”listtime” expects a function value, got undefined"></a>[Vue warn]: v-on:click=”listtime” expects a function value, got undefined</h3><pre><code>父组件模板的内容在父组件作用域内编译；子组件模板的内容在子组件作用域内编译
</code></pre><p>###</p>
<h2 id="升级Vue2-0遇到问题"><a href="#升级Vue2-0遇到问题" class="headerlink" title="升级Vue2.0遇到问题"></a>升级Vue2.0遇到问题</h2><h3 id="Vue-warn-Do-not-mount-Vue-to-lt-html-gt-or-lt-body-gt-mount-to-normal-elements-instead"><a href="#Vue-warn-Do-not-mount-Vue-to-lt-html-gt-or-lt-body-gt-mount-to-normal-elements-instead" class="headerlink" title="[Vue warn]: Do not mount Vue to &lt;html&gt; or &lt;body&gt; - mount to normal elements instead."></a><code>[Vue warn]: Do not mount Vue to &lt;html&gt; or &lt;body&gt; - mount to normal elements instead.</code></h3><blockquote>
<p>解决方法：</p>
</blockquote>
<p>字面意思就是说不要讲元素插入 <code>html</code> 和 <code>body</code> 的节点上，换成<code>ID</code>或<code>class</code>选择器就可以解决。</p>
<h3 id="Vue-warn-Failed-to-mount-component-template-or-render-function-not-defined-found-in-root-instance"><a href="#Vue-warn-Failed-to-mount-component-template-or-render-function-not-defined-found-in-root-instance" class="headerlink" title="[Vue warn]: Failed to mount component: template or render function not defined. (found in root instance)"></a><code>[Vue warn]: Failed to mount component: template or render function not defined. (found in root instance)</code></h3><blockquote>
<p>解决方法：</p>
</blockquote>
<p><code>vue2.0</code>的脚手架, <code>webpack.base.conf.js</code>的</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">alias: &#123;</div><div class="line">      <span class="string">'vue'</span>: <span class="string">'vue/dist/vue.common.js'</span>,<span class="comment">//注意这边改为vue.js 不然就报错</span></div><div class="line">      <span class="string">'src'</span>: path.resolve(__dirname, <span class="string">'../src'</span>),</div><div class="line">      <span class="string">'assets'</span>: path.resolve(__dirname, <span class="string">'../src/assets'</span>),</div><div class="line">      <span class="string">'components'</span>: path.resolve(__dirname, <span class="string">'../src/components'</span>)</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p><code>import Vue from &#39;vue&#39;</code>,默认引是<code>vue.common.js</code></p>
<h3 id="transition-quot-bounce-quot-改为"><a href="#transition-quot-bounce-quot-改为" class="headerlink" title=":transition=&quot;bounce&quot;  改为 "></a><code>:transition=&quot;bounce&quot;</code>  改为 <transition name="bounce"></transition></h3><p><strong>新版本</strong> 改为标签类型，多个引用 <code>transition-group</code></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;transition-group name=<span class="string">"list"</span> tag=<span class="string">"p"</span>&gt;</div><div class="line">    <span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-for</span>=<span class="string">"item in items"</span> <span class="attr">v-bind:key</span>=<span class="string">"item"</span> <span class="attr">class</span>=<span class="string">"list-item"</span>&gt;</span></span></div><div class="line">      &#123;&#123; item &#125;&#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  &lt;<span class="regexp">/transition-group&gt;</span></div></pre></td></tr></table></figure>
<p>配合 <code>animate.css</code>  <code>import Animate from &#39;animate.css &#39;</code><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;transition name=<span class="string">"custom-classes-transition"</span></div><div class="line">  enter-active-<span class="class"><span class="keyword">class</span></span>=<span class="string">"animated tada"</span> <span class="comment">//进行中时的动画</span></div><div class="line">  leave-active-<span class="class"><span class="keyword">class</span></span>=<span class="string">"animated bounceOutRight"</span>&gt;<span class="comment">//结束离开时的动画</span></div><div class="line">  &lt;panel-casesShow v-show=<span class="string">"isShow == true"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">panel-casesShow</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;/<span class="name">transition</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;记录平时学习工作中VUE遇到的问题和总结&lt;/blockquote&gt;

&lt;h2 id=&quot;常见报错&quot;&gt;&lt;a href=&quot;#常见报错&quot; class=&quot;headerlink&quot; title=&quot;常见报错&quot;&gt;&lt;/a&gt;常
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://likr.cn/tags/JavaScript/"/>
    
      <category term="VUE" scheme="http://likr.cn/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>《七月的安生》</title>
    <link href="http://likr.cn/2016/09/18/%E3%80%8A%E4%B8%83%E6%9C%88%E7%9A%84%E5%AE%89%E7%94%9F%E3%80%8B/"/>
    <id>http://likr.cn/2016/09/18/《七月的安生》/</id>
    <published>2016-09-18T13:06:57.000Z</published>
    <updated>2016-09-18T14:25:58.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br>    <br>七月一个乖巧聪明，对感情专一，从小到大规规矩矩，过着父母规划好的生活<br>    安生一个桀骜叛逆，没父母关爱，随风逐流，个性大大咧咧，独立坚强的女孩<br><br></blockquote>

<a id="more"></a>
<h2 id="七月也是安生"><a href="#七月也是安生" class="headerlink" title="七月也是安生"></a>七月也是安生</h2><p>每个人都有两面，一面可能遵从一份大家都认可的安定，一面需要自己独自去承担面对的风险。</p>
<p>我觉得 <code>七月</code> 也是 <code>安生</code> 。她们都在各个年龄段，独自探索着另一面；<br><code>安生</code> 走走停停，走南闯北，风风雨雨什么都见过了，她比较坚强，靠自己的本事吃饭，哪怕 <strong>1%</strong> 的希望她都争取。<br><code>七月</code> 从小就很优秀，她会尽自己全力争取 <strong>100%</strong>，过着安逸的日子，守护着真挚的爱情。</p>
<p>当她们都累了，疲倦了，可能就互换下身份，做个不一样的自己，寻求自己心里的那份安定。</p>
<p>现实生活中，我觉得我是 <code>七月</code> 也是 <code>安生</code>。</p>
<p>从小到大都比较听爸妈的话，过着爸妈安排的日子。然而和 <code>七月</code>不一样的是，我放弃了 <strong>高考</strong> ，也放弃了爸妈给我安排的 <strong>工作</strong>，选择了自己想要的生活。</p>
<p>虽然期间有懵懵懂懂，迷茫过，但至今我未后悔我的选择。</p>
<p>比起 <code>安生</code>，我没她那么肆无忌惮的可以走南闯北，无所牵挂的做自己，之前也在上海工作过半年，但我还是选择了回杭州。因为在自己家乡工作真的特别亲切。</p>
<p>现实生活，看过挺多了。有些人一生忙忙碌碌，做着大家都认可很棒的一面；有些人特立独行，不听从大家好的意见，做自己认为的一面；有些人按部就班，上爸妈安排好的工作，在一个四四方方的房间，每天早九晚五的工作；<br>其实都过的挺累的，我也是那种特立独行的人，不过比较谦虚那种。。</p>
<p>为什么，要用所谓的逻辑束缚自己的生活呢？</p>
<p>回答：这就是生活啊，生活也包含家庭，工作，感情等等。你也可以业余丰富自己呀。</p>
<p>于是我很久很久之前买了吉他，自学了 <strong>3个月</strong> ，学了几首民谣歌曲，然后，加班加点，后来、、、就一直沉睡在哪个小角落。记得最愉快的音符 <code>6321 5321 ....</code><br>后来我也坚持了 <strong>一年多</strong> 的健身，买了增肌粉，各种健身器材，好吧 楞似没胖，到时壮了不少。</p>
<h2 id="谈谈最近"><a href="#谈谈最近" class="headerlink" title="谈谈最近"></a>谈谈最近</h2><p>看到我弟弟懂事很多，能理解了，我心里也开心了很多。<br>我阿姨一个女强人，自己一个人打理着店。忙的时候，真的特别忙。以前有空经常会帮忙照看店铺。</p>
<p>每个女强人内心都住着一个小女人，找寻被爱、找寻被关爱、找寻温暖、找寻被陪伴、找寻被理解。她人缘好，每次都面对微笑。虽然我知道她过的很累，心也很累。</p>
<p>一个男人必须要有责任心。<br>———————————— 永远支持你。阿姨</p>
<ul>
<li>。 -好吧 我又感性了！</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;    &lt;br&gt;七月一个乖巧聪明，对感情专一，从小到大规规矩矩，过着父母规划好的生活&lt;br&gt;    安生一个桀骜叛逆，没父母关爱，随风逐流，个性大大咧咧，独立坚强的女孩&lt;br&gt;&lt;br&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="心情语录" scheme="http://likr.cn/tags/%E5%BF%83%E6%83%85%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>针对项目思考的前端脚手架</title>
    <link href="http://likr.cn/2016/09/14/%E9%92%88%E5%AF%B9%E9%A1%B9%E7%9B%AE%E6%80%9D%E8%80%83%E7%9A%84%E5%89%8D%E7%AB%AF%E8%84%9A%E6%89%8B%E6%9E%B6/"/>
    <id>http://likr.cn/2016/09/14/针对项目思考的前端脚手架/</id>
    <published>2016-09-14T13:46:48.000Z</published>
    <updated>2016-09-14T13:50:07.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue-Gulp-Webpack前端脚手架"><a href="#Vue-Gulp-Webpack前端脚手架" class="headerlink" title="Vue-Gulp-Webpack前端脚手架"></a>Vue-Gulp-Webpack前端脚手架</h1><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ol>
<li><a href="#install">安装</a></li>
<li><a href="#directory">工程目录规范</a></li>
<li><a href="#condition">前置条件</a></li>
<li><a href="#question">解决问题</a></li>
<li><a href="#foreend">前端技术要求</a></li>
<li><a href="#help">如何使用</a></li>
<li><a href="#deficiency">不足之处</a></li>
</ol>
<a id="more"></a>
<p><a name="install"></a></p>
<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><p><strong>版本</strong>：NODE: v6.2.0 NPM: 3.8.9</p>
<p>由于npm安装源太慢，建议换成淘宝cnpm安装源</p>
<p>工程目录模块安装：</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm <span class="keyword">install</span></div></pre></td></tr></table></figure>
<p><a name="directory"></a></p>
<h2 id="2-工程目录规范"><a href="#2-工程目录规范" class="headerlink" title="2.工程目录规范"></a>2.工程目录规范</h2><pre><code>|—— mode_modules                 npm安装的模块
|—— gulpfile.js                  Gulp
|—— webpack.dev.conf.js          webpack生产环境
|—— webpack.prod.conf.js         webpack发布环境
|—— index.html                   首页
|   |—— src   开发目录
|   |   |—— script           Vue代码
|   |   |   |—— component    公共组件目录
|   |   |—— js               js源代码
|   |   |   |—— public_lib   第三方库
|   |   |   |—— component    公共组件目录
|   |   |   |—— lib    公共组件目录
|   |   |   |—— xx.js        组件合成chunk.js
|   |   |—— style            scss源代码
|   |   |   |—— common         基础库
|   |   |   |—— component    公共组件目录
|   |   |   |—— lib          第三方库
|   |   |—— img              scss源代码
|   |   |—— flash            flash源文件
|   |   |—— fonts            字体源文件
|   |—— dist                 编译合并压缩后的js、css
</code></pre><h2 id="3-前置条件"><a href="#3-前置条件" class="headerlink" title="3.  前置条件"></a>3.  前置条件</h2><ul>
<li>NPM管理第三方JS依赖，统一在 <strong>LIB</strong>文件导入，非NPM第三方插件放置 <strong>public_lib</strong>目录</li>
<li>此项目非前后端分离，故生产环境中每次都需要重新编译文件，输出发布目录</li>
<li>主要技术 vue.js ,jQuery,JavaScript;</li>
</ul>
<p><a name="question"></a></p>
<h2 id="4-解决问题"><a href="#4-解决问题" class="headerlink" title="4. 解决问题"></a>4. 解决问题</h2><ul>
<li>减少css,js文件请求数，跟据文件名+MD5戳方式清除缓存，自动替换页面里的文件路径</li>
<li>无需动刷新页面，文件改变后自动同步刷新多设备浏览器</li>
<li>Gulp处理SCSS的编译、压缩、合并、兼容前缀、md5</li>
<li>webpack处理JS多模块合并、压缩、打包</li>
</ul>
<p><a name="foreend"></a></p>
<h2 id="5-前端技术要求"><a href="#5-前端技术要求" class="headerlink" title="5. 前端技术要求"></a>5. 前端技术要求</h2><ul>
<li>略懂linux,nodejs,gulp,webpack,git</li>
</ul>
<p><a name="help"></a></p>
<h2 id="6-如何使用"><a href="#6-如何使用" class="headerlink" title="6. 如何使用"></a>6. 如何使用</h2><ul>
<li>Gulp：负责多任务的定制</li>
<li>webpack：负责打包JS模块</li>
<li>公共组件共同导入的chunk父级文件，统一在webpack的 <strong>config</strong>配置引入</li>
</ul>
<blockquote>
<p>生产</p>
</blockquote>
<pre><code>gulp watch ：//启动开发环境，监测文件动向，实时刷新编译
gulp build:dev：//编译合并压缩js输出发布目录（包含sourceMap）
gulp build:scss：//编译合并压缩scss输出发布目录
gulp build:common：//公共文件输出发布目录
</code></pre><blockquote>
<p>发布</p>
</blockquote>
<pre><code>gulp build：//执行以上命令（不包含sourceMap）
</code></pre><p><a name="deficiency"></a></p>
<h2 id="7-不足之处"><a href="#7-不足之处" class="headerlink" title="7. 不足之处"></a>7. 不足之处</h2><ul>
<li>项目非前后端分离，现在的生产环境也可以是发布环境，每次都需要编译文件会有点慢</li>
<li><strong>由于webpack的同步编译机制，js文件太大导致压缩缓慢</strong></li>
<li>默认不监测html自动刷新，因为编译scss会自动给html加入hash值，会导致刷新多次</li>
<li>暂时不支持scss的<strong>devtool</strong>调试</li>
<li>.vue不是用webpack的热替换，会有些慢</li>
</ul>
<p><a href="https://github.com/lizhoukai/VUE-gulp-webpack" target="_blank" rel="external">项目地址</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Vue-Gulp-Webpack前端脚手架&quot;&gt;&lt;a href=&quot;#Vue-Gulp-Webpack前端脚手架&quot; class=&quot;headerlink&quot; title=&quot;Vue-Gulp-Webpack前端脚手架&quot;&gt;&lt;/a&gt;Vue-Gulp-Webpack前端脚手架&lt;/h1&gt;&lt;h2 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#install&quot;&gt;安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#directory&quot;&gt;工程目录规范&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#condition&quot;&gt;前置条件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#question&quot;&gt;解决问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#foreend&quot;&gt;前端技术要求&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#help&quot;&gt;如何使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#deficiency&quot;&gt;不足之处&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://likr.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JS获取URL中GET的参数转换为JSON格式</title>
    <link href="http://likr.cn/2016/08/25/JS%E8%8E%B7%E5%8F%96URL%E4%B8%ADGET%E7%9A%84%E5%8F%82%E6%95%B0%E8%BD%AC%E6%8D%A2%E4%B8%BAJSON%E6%A0%BC%E5%BC%8F/"/>
    <id>http://likr.cn/2016/08/25/JS获取URL中GET的参数转换为JSON格式/</id>
    <published>2016-08-25T11:55:59.000Z</published>
    <updated>2016-12-08T09:47:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ohv0hyr4v.qnssl.com/2016082523067mall.gif" alt="2016082523067mall.gif"></p>
<a id="more"></a>
<h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>商城页的分页组件和顶部的TAG选项的筛选条件。</p>
<p>当分页器默认点击所有商品页下一页的时候，<code>url</code>后会添加一个<code>page=2</code>翻页。然后点击 <strong>TAG</strong> 的时候，<code>url</code>也随应也加上参数<code>categories=1</code></p>
<p>现在遇到的问题:</p>
<blockquote>
<p>1.如果当前<strong>TAG</strong>筛选的商品比较少，只够展示一页的数据，那么当前<code>page=2</code>，是不是应该只展示第一页的数据。<br>2.每次点击翻页，分页器都会<strong>JS</strong>重新获取 <code>window.location.search</code> <strong>URl ？</strong>号后面的<code>get</code>参数，但是分页器翻页的时候，下一页比如<code>page=3</code>，当前 <strong>URL</strong> 的也包含了上一次的<code>page=2</code>，这时候要过滤之前的参数。</p>
</blockquote>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p><code>window.location.search</code>获取当前<strong>URL</strong>后面的<code>get</code>参数，然后转换成<strong>JS对象</strong>，列如：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">	page:<span class="number">1</span>,</div><div class="line">	categories:[</div><div class="line">		<span class="string">"1"</span>,</div><div class="line">		<span class="string">"2"</span></div><div class="line">	],</div><div class="line">	producer:[</div><div class="line">		<span class="string">"2"</span>,</div><div class="line">		<span class="string">"3"</span></div><div class="line">	]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>然后对这个<strong>对象</strong>进行参数修改<br>接着再把这个对象转换成<code>url</code>中的<code>get</code>字符串，成为一个新的链接地址</p>
<h2 id="需要的知识点"><a href="#需要的知识点" class="headerlink" title="需要的知识点"></a>需要的知识点</h2><p>对象转JSON，JSON转对象：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a=&#123;<span class="string">"name"</span>:<span class="string">"tom"</span>,<span class="string">"sex"</span>:<span class="string">"男"</span>,<span class="string">"age"</span>:<span class="string">"24"</span>&#125;;</div><div class="line"><span class="keyword">var</span> b=<span class="string">'&#123;"name":"Mike","sex":"女","age":"29"&#125;'</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> aToStr=<span class="built_in">JSON</span>.stringify(a);</div><div class="line"><span class="keyword">var</span> bToObj=<span class="built_in">JSON</span>.parse(b);</div><div class="line"></div><div class="line">alert(<span class="keyword">typeof</span>(aToStr));  <span class="comment">//string</span></div><div class="line">alert(<span class="keyword">typeof</span>(bToObj));<span class="comment">//object</span></div></pre></td></tr></table></figure>
<p>分页取余：<br><code>Math.random()</code><br><strong>random()</strong><br>返回 0 ~ 1 之间的随机数。</p>
<p><code>Math.ceil()</code><br><strong>ceil()</strong> 方法可对一个数进行上舍入。<br>参数必须是一个数值。返回值大于等于 x，并且与它最接近的整数。</p>
<p><code>Math.floor()</code><br><strong>floor()</strong> 方法可对一个数进行下舍入。<br>参数可以是任意数值或表达式。返回值小于等于 x，且与 x 最接近的整数。</p>
<p><code>Math.round()</code><br><strong>round()</strong> 方法可把一个数字舍入为最接近的整数</p>
<h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> getArgs = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> tmpArray = &#123;&#125;;</div><div class="line">  <span class="keyword">var</span> currentArgsStr = <span class="built_in">window</span>.location.search;</div><div class="line">  <span class="keyword">var</span> tmp, tmpKey, tmpVal;</div><div class="line">  <span class="keyword">if</span> (!currentArgsStr) &#123;</div><div class="line">    <span class="keyword">return</span> &#123;&#125;;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  currentArgsStr = currentArgsStr.replace(<span class="string">'?'</span>, <span class="string">''</span>);</div><div class="line">  $.each(currentArgsStr.split(<span class="string">"&amp;"</span>), <span class="function"><span class="keyword">function</span>(<span class="params">index, ele</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> array = [];</div><div class="line">    tmp = ele.split(<span class="string">"="</span>);</div><div class="line">    tmpKey = tmp[<span class="number">0</span>];</div><div class="line">    tmpVal = tmp[<span class="number">1</span>];</div><div class="line">    <span class="keyword">if</span> (tmpArray[tmpKey]) &#123;</div><div class="line">      tmpArray[tmpKey].push(tmpVal);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">      array.push(tmpVal);</div><div class="line">      tmpArray[tmpKey] = array;</div><div class="line">    &#125;</div><div class="line">  &#125;);</div><div class="line">  <span class="keyword">return</span> tmpArray;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ohv0hyr4v.qnssl.com/2016082523067mall.gif&quot; alt=&quot;2016082523067mall.gif&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://likr.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>聊聊最近</title>
    <link href="http://likr.cn/2016/08/20/%E8%81%8A%E8%81%8A%E6%9C%80%E8%BF%91/"/>
    <id>http://likr.cn/2016/08/20/聊聊最近/</id>
    <published>2016-08-20T12:59:03.000Z</published>
    <updated>2016-08-20T14:22:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>1.最近三个月去干吗了，为什么不更博？<br>2.工作状况如何？<br>3.半年过去了，做了点啥</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><blockquote>
<p>其实挺有感触的，小时候上学经常听老师讲，习惯一定要养好，态度端正，姿势摆正。到了老爸老妈那边，就是习惯会跟着你一辈子，一定要纠正不好的地方。</p>
</blockquote>
<a id="more"></a>
<p>三月前，某一夜黑风高之时，那天非常热，还是跟往常一样。下班回到家走起健身男神之路。一开始没做热身运动，直接做40J的深蹲，做了40下后，感觉没啥。</p>
<p>然而第二天起来，噩梦就从这开始了。很不幸，我腰疼，小腿酸胀，一打喷嚏就整个筋脉酸疼。<br>期初我以为锻炼把腰扭伤了，于是去医院拍了CT片，医生也看不出什么，就配了点中药，于是我就静养了2个月。但我发现我还是没好。。。</p>
<p>于是我去了市中医院，也是跟往常一样，抽血，拍CT片，也看不出什么。医生叫我拍磁共振，看了结果说我腰间盘突出，刚好压到那根神经了。于是跟我说要动手术。当时的心情一万个草泥马路过，我还这么年轻啊~~ 于是我考虑了下，因为1.要住院，我现在在上班2.第一次腰伤一定要治好，不能太随便，很容易复发，我朋友说不要打针。然而我在这医院医保费用花光了，还自费了1000。。。。</p>
<p>后来一个认识的女性好朋友知道了我的状况，给我推荐了一个针灸中医。这一去，直到至今。医生很专业，知道我的痛点在哪里，让我尝试了什么叫痛不欲生！！！还在继续疗程，希望赶紧好起来，非常谢谢那位朋友！</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>记得之前BOSS说过，年纪轻的时候，往往不注意一些自己的陋习，拼命的加班，用身体换取健康，平时不注意饮食和身体健康。久而久之，这些陋习伴随着你。等你年纪大了，就经常跑医院用钱来换取健康。</p>
<p>其实平常自己的坐姿非常不好，习惯晚睡，饮食习惯也不好。<br>以上也是我很久没更新博客的原因。</p>
<p>工作嘛，还是老样子，之前入职了杭州还算有名气的某互联网公司，但发现这些跟我的职业规划不一样，没有过硬的自我发展空间，提出意见，却没人反馈或相应的接纳。频繁的加班，而且加班到1-2点那种，不自在。还是辞职了。最后还是选择了创业公司，为什么？</p>
<p>我更希望我扮演一个能独当一面，能提出一些宝贵意见，相互切磋，并持续提高一些团队效率，或自我提升的那一面。而不是产品提需求，ok?照搬照做，那不是我想要的，那是生产机器。</p>
<p>转眼半年已去，离上年定的目标，发现很多事情没完成，继续努力！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink&quot; title=&quot;前言：&quot;&gt;&lt;/a&gt;前言：&lt;/h2&gt;&lt;p&gt;1.最近三个月去干吗了，为什么不更博？&lt;br&gt;2.工作状况如何？&lt;br&gt;3.半年过去了，做了点啥&lt;/p&gt;
&lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;其实挺有感触的，小时候上学经常听老师讲，习惯一定要养好，态度端正，姿势摆正。到了老爸老妈那边，就是习惯会跟着你一辈子，一定要纠正不好的地方。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="心情语录" scheme="http://likr.cn/tags/%E5%BF%83%E6%83%85%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>Hexo npm 常见报错</title>
    <link href="http://likr.cn/2016/05/22/hexo%E5%B8%B8%E8%A7%81%E6%8A%A5%E9%94%99/"/>
    <id>http://likr.cn/2016/05/22/hexo常见报错/</id>
    <published>2016-05-22T02:22:43.000Z</published>
    <updated>2016-05-22T03:05:34.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>报错如下：</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">➜  Vuepack.github.io git:(develop) ✗ hexo -v</div><div class="line">&#123; [Error: Cannot find module <span class="string">'./build/Release/DTraceProviderBindings'</span>] code: <span class="string">'MODULE_NOT_FOUND'</span> &#125;</div><div class="line">&#123; [Error: Cannot find module <span class="string">'./build/default/DTraceProviderBindings'</span>] code: <span class="string">'MODULE_NOT_FOUND'</span> &#125;</div><div class="line">&#123; [Error: Cannot find module <span class="string">'./build/Debug/DTraceProviderBindings'</span>] code: <span class="string">'MODULE_NOT_FOUND'</span> &#125;</div><div class="line">hexo: 3.2.0</div><div class="line">hexo-cli: 1.0.1</div><div class="line">os: Darwin 15.4.0 darwin x64</div><div class="line">http_parser: 2.5.2</div><div class="line">node: 4.4.4</div><div class="line">v8: 4.5.103.35</div><div class="line">uv: 1.8.0</div><div class="line">zlib: 1.2.8</div><div class="line">ares: 1.10.1-DEV</div><div class="line">icu: 56.1</div><div class="line">modules: 46</div><div class="line">openssl: 1.0.2h</div></pre></td></tr></table></figure></p>
<p>解决方案：<br>缺少 <code>dtrace-provider</code> 这个 <code>module</code>，可以 <code>cd /Users/kevinli/.npm/</code> 查看是否有这个模块<br>注意要记得翻墙执行以下命令：</p>
<p> 1.执行 <code>npm uninstall hexo</code> 卸载 <code>hexo</code>；<br> 2.执行 <code>npm install -g hexo --no-optional</code>；<br> 3.<code>cd</code> 到博客目录，删除 <code>db.json</code>，执行 <code>npm install</code> ，重新安装 <code>package.json</code> 中配置的依赖库<strong> (node_modules) </strong>；<br> 4.依次执行 <code>hexo clean</code> 和 <code>hexo s</code> ，查看是否报错</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;报错如下：&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div
    
    </summary>
    
    
      <category term="Hexo" scheme="http://likr.cn/tags/Hexo/"/>
    
      <category term="npm" scheme="http://likr.cn/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>webpack学习和踩坑</title>
    <link href="http://likr.cn/2016/05/01/webpack%E5%AD%A6%E4%B9%A0%E5%92%8C%E8%B8%A9%E5%9D%91/"/>
    <id>http://likr.cn/2016/05/01/webpack学习和踩坑/</id>
    <published>2016-05-01T08:15:36.000Z</published>
    <updated>2016-12-08T09:47:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><img class="full-image" src="https://ohv0hyr4v.qnssl.com/webpack.png" alt=""></p>
<p>迫于前端技术的迭代速度快，为了快速的开发和新技术的研究，学习记录下。</p>
<h2 id="webpack学习"><a href="#webpack学习" class="headerlink" title="webpack学习"></a>webpack学习</h2><p><code>构建流程</code></p>
<ol>
<li>首先创建 <code>webpack</code>目录，使用 <code>npm init</code>命令初始化依赖配置文件</li>
<li>新建<code>webpack.config.js</code>的文件，<code>webpack</code>是根据<code>config</code>文件里面描述的内容对一个项目进行处理事情</li>
<li>创建项目目录结构</li>
<li>根据项目配置<code>wenpack.config.js</code>文件，并<code>npm install</code>安装项目所需依赖模块</li>
<li>终端执行编译完成自动化构建</li>
</ol>
<a id="more"></a>
<div class="tip"><br>    注意：<strong> package.json </strong>文件是 <code>npm init</code> 命令初始化生成的文件，这里面有很多配置信息，包含了这个项目要安装基于<code>nodeJS</code>的各种模块，<br>    还有很多配置信息。如果事先配置好所需要的配置信息，那么用 <code>npm install</code> 就可以自动安装你所需的模块。<br></div>

<hr>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>所需<code>npm@2.15.0</code> 和 <code>node@4.4.2</code>,才能进行下一步。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g webpack;//安装全局模块webpack</div></pre></td></tr></table></figure>
<hr>
<h3 id="配置webpack-config-js文件"><a href="#配置webpack-config-js文件" class="headerlink" title="配置webpack.config.js文件"></a>配置webpack.config.js文件</h3><p><code>参数说明：</code></p>
<ul>
<li><code>require()</code>：引入<code>nodeJs</code>的<code>path</code>模块</li>
<li><code>path.resolve()</code>：<code>nodeJS</code>的方法，传递一个相对路径</li>
<li><code>module.exports</code>：模块接口用于单独的定义，返回数据类型</li>
<li><code>entry</code> ：要处理的javascript文件，让<code>webpack</code>用哪个文件作为项目的入口</li>
<li><code>output</code>：出口 让<code>webpack</code>把处理完成的文件放在哪里</li>
<li><code>module</code>：模块 要用什么不同的模块来处理各种类型的文件</li>
<li><code>__dirname</code> ： 总是返回被执行的 js 所在文件夹的绝对路径</li>
<li><code>__filename</code>： 总是返回被执行的 js 的绝对路径</li>
<li><code>plugins</code>   ： 插件项</li>
<li><code>devServer</code> ： 可以实时监听响应文件</li>
<li><code>resolve</code>   ： 查找项</li>
</ul>
<p><code>目录结构：</code></p>
<ul>
<li>webpack<ul>
<li>src/<ul>
<li>index.js (内容： console.log(‘index.js’))</li>
<li>main.js  (内容： console.log(‘main.js’))</li>
</ul>
</li>
<li>package.json</li>
<li>webpack.config.js</li>
</ul>
</li>
</ul>
<p><code>webpack.config.js 配置文件</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>); <span class="comment">//引入nodeJs的path模块</span></div><div class="line"><span class="keyword">var</span> HtmlwebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>); <span class="comment">//自动生成html的模块</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> ROOT_PATH = path.resolve(__dirname);<span class="comment">//</span></div><div class="line"><span class="keyword">var</span> INDEX_PATH = path.resolve(ROOT_PATH, <span class="string">'src'</span>);</div><div class="line"><span class="comment">//path.resolve()为nodeJS的方法，传递一个相对路径</span></div><div class="line"><span class="comment">// var _PATH = path.resolve('src');//1.传入一个src的文件目录</span></div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = &#123;<span class="comment">//模块接口用于单独的定义，返回数据类型</span></div><div class="line">  <span class="comment">// entry: _PATH, //2.entry的值如果是文件名，那么会默认会找index.js (单入口文件)</span></div><div class="line">  entry: [<span class="string">'./src/index.js'</span>,<span class="string">'./src/main.js'</span>],<span class="comment">//多入口文件只打包一个文件</span></div><div class="line">  output: &#123;<span class="comment">//输出接口</span></div><div class="line">    path: <span class="string">'./build'</span>,<span class="comment">//输出路径</span></div><div class="line">    filename: <span class="string">'build.[hash].js'</span> <span class="comment">//合并后输出的文件名为build.js [hash]为生成Hash值防止缓存</span></div><div class="line">  &#125;,</div><div class="line">  plugins: [<span class="comment">//html-webpack-plugin 自定生成.html文件</span></div><div class="line">    <span class="keyword">new</span> HtmlwebpackPlugin(&#123;</div><div class="line">      title: <span class="string">'Hello World'</span></div><div class="line">    &#125;)</div><div class="line">  ]</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>在终端中输入<code>webpack</code>，如下图：</p>
<p><img src="https://ohv0hyr4v.qnssl.com/92B7DA54-E723-4D4A-B436-335BAB00F50D.png" alt=""></p>
<p>可以看到<code>npm install</code>安装的 <code>html-webpack-plugin</code>模块帮我们自动生成了<code>index.html</code>，并且页面自动引入了合并好的<code>build.js</code></p>
<hr>
<h3 id="插件：webpack-dev-server"><a href="#插件：webpack-dev-server" class="headerlink" title="插件：webpack-dev-server"></a>插件：webpack-dev-server</h3><p>这个插件就像<code>Browsersync</code>一样，你改动过的的内容，这插件能都让浏览器实时、快速响应您的文件；<br>免去<code>command + R</code> 反复刷新。</p>
<p><code>1.全局安装 webpack-dev-server</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install webpack-dev-server －g</div></pre></td></tr></table></figure></p>
<p><code>2.配置config文件</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  ....</div><div class="line">  devServer: &#123;</div><div class="line">    historyApiFallback: <span class="literal">true</span>,</div><div class="line">    hot: <span class="literal">true</span>,</div><div class="line">    inline: <span class="literal">true</span>,</div><div class="line">    progress: <span class="literal">true</span>,</div><div class="line">  &#125;,</div><div class="line">  ...</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>3.配置package.json运行命令</code><br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">"scripts": &#123;</div><div class="line">  "start": "webpack-dev-server --hot --inline"//npm支持自定义一些命令</div><div class="line">&#125;,</div></pre></td></tr></table></figure></p>
<hr>
<h3 id="插件：样式处理器"><a href="#插件：样式处理器" class="headerlink" title="插件：样式处理器"></a>插件：样式处理器</h3><p><code>webpack</code>样式的处理，是通过<code>module</code>模块中的<code>loader</code>方式处理各种样式预处理的机制。</p>
<p><code>样式相关插件说明：</code></p>
<ul>
<li><code>css-loader</code>  : 用于遍历带有<code>.css</code>的样式文件，并且进行相关处理</li>
<li><code>style－loader</code>: 把CSS代码插入页面中的一个 <code>style</code> 标签中</li>
<li><code>node-sass</code>    : 解析sass文件</li>
<li><code>sass-loader</code>  : 编译预加载.sass文件</li>
<li><code>test</code>         : 包含一个可以匹配到的正则表达式</li>
<li><code>loaders</code>      : 通过管道方式链式调用，也是一个数组在里面可以定义需要处理的样式处理器，注意<code>loaders</code>的处理顺序是从右到左</li>
</ul>
<p><code>1.配置webpack.config.js</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">module: &#123;</div><div class="line">  loaders: [</div><div class="line">    &#123;</div><div class="line">      <span class="comment">// test: /\.css$/,</span></div><div class="line">      <span class="comment">// loaders: ['style', 'css'],</span></div><div class="line"></div><div class="line">      test: <span class="regexp">/\.scss$/</span>,                    <span class="comment">//解析.scss文件</span></div><div class="line">      loaders: [<span class="string">'style'</span>, <span class="string">'css'</span>, <span class="string">'sass'</span>],  <span class="comment">// 从右往左 sass &gt; css &gt; style</span></div><div class="line">    &#125;</div><div class="line">  ],</div><div class="line">&#125;,</div><div class="line">...</div></pre></td></tr></table></figure></p>
<p><code>2.新建main.scss</code></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$yellow: yellow;</div><div class="line"></div><div class="line">body &#123;</div><div class="line">  background: $yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>3.在index.js引入</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">require</span>(<span class="string">'./main.scss'</span>)</div></pre></td></tr></table></figure></p>
<p><code>4.npm start就可以看到效果了</code></p>
<hr>
<h3 id="插件-autoprefixer"><a href="#插件-autoprefixer" class="headerlink" title="插件: autoprefixer"></a>插件: autoprefixer</h3><div class="tip"><br>    <code>browsers:[&quot;Firefox &gt;= 20&quot;,&quot;&gt; 5%&quot;,&quot;last 2 versions&quot;]</code>: 兼容新旧版本写法<br></div>

<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span>&#123;</div><div class="line">    <span class="attribute">display</span>: -webkit-box; <span class="comment">/* 老版本语法: Safari, iOS, Android browser, older WebKit browsers. */</span></div><div class="line">    <span class="attribute">display</span>: -moz-box; <span class="comment">/* 老版本语法: Firefox (buggy) */</span></div><div class="line">    <span class="attribute">display</span>: -ms-flexbox; <span class="comment">/* 混合版本语法: IE 10 */</span></div><div class="line">    <span class="attribute">display</span>: -webkit-flex; <span class="comment">/* 新版本语法: Chrome 21+ */</span></div><div class="line">    <span class="attribute">display</span>: flex; <span class="comment">/* 新版本语法: Opera 12.1, Firefox 22+ */</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>1.局部安装 安装 autoprefixer-loader</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install autoprefixer-loader --save-dev</div></pre></td></tr></table></figure></p>
<p><code>2.配置 webpack.config.js</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">module: &#123;</div><div class="line">  loaders: [&#123;</div><div class="line">    <span class="comment">// test: /\.css$/,</span></div><div class="line">    <span class="comment">// loaders: ['style', 'css'],</span></div><div class="line"></div><div class="line">    test: <span class="regexp">/\.scss$/</span>,                    <span class="comment">//解析.scss文件</span></div><div class="line">    <span class="comment">// loaders: ['style', 'css', 'sass'],  // 从右往左 sass &gt; css &gt; style</span></div><div class="line">    <span class="comment">// loader: 'style!css?modules&amp;importLoaders=2&amp;sourceMap&amp;localIdentName=[local]___[hash:base64:5]!autoprefixer?browsers=last 2 version!sass?outputStyle=expanded&amp;sourceMap'</span></div><div class="line">    loader: <span class="string">'style!css!autoprefixer?&#123;browsers:["Firefox &gt;= 20","&gt; 5%","last 2 versions"]&#125;'</span><span class="comment">//</span></div><div class="line">  &#125;],</div><div class="line">&#125;,</div></pre></td></tr></table></figure></p>
<p><code>3.修改 main.scss</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">body&#123;</div><div class="line">    display:flex;</div><div class="line">    justify-content: center;</div><div class="line">    align-items: center;</div><div class="line">    box-shadow: 2px 2px 3px #f33;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>4. 效果如下图:</code><br><img src="https://ohv0hyr4v.qnssl.com/87A9845D-5961-4D72-93C2-83F3F5C68A05.png" alt=""></p>
<hr>
<h3 id="插件-图片"><a href="#插件-图片" class="headerlink" title="插件: 图片"></a>插件: 图片</h3><p>根据项目的需求，定义的大小范围来判断是否使用<code>base64</code>编码的，减少网络请求<br><code>1. 局部安装 url-loader</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install url-loader --save-dev</div></pre></td></tr></table></figure></p>
<p><code>2.配置 webpack.config.js</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>: &#123;</div><div class="line">  loaders: [</div><div class="line">    ....</div><div class="line">    &#123;</div><div class="line">        test: <span class="regexp">/\.(png|jpg)$/</span>,</div><div class="line">        loader: <span class="string">'url?limit=40000'</span><span class="comment">//注意后面那个limit的参数，当你图片大小小于这个限制的时候，会自动启用base64编码图片</span></div><div class="line">    &#125;</div><div class="line">    ....</div><div class="line">  ],</div><div class="line">&#125;,</div></pre></td></tr></table></figure></p>
<p><code>开启 Base64 效果如下图:</code></p>
<p><img src="https://ohv0hyr4v.qnssl.com/a1.png" alt=""></p>
<p><code>未开启 Base64 效果如下图:</code><br><img src="https://ohv0hyr4v.qnssl.com/a2.png" alt=""></p>
<hr>
<h2 id="前端模块化"><a href="#前端模块化" class="headerlink" title="前端模块化"></a>前端模块化</h2><h3 id="打包多页面公共模块"><a href="#打包多页面公共模块" class="headerlink" title="打包多页面公共模块"></a>打包多页面公共模块</h3><p>有时候多个页面有公共可以抽取的模块，我们可以用<code>CommonsChunkPlugin</code>插件来打包这些页面公共模块</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> CommonsChunkPlugin = <span class="built_in">require</span>(<span class="string">"webpack/lib/optimize/CommonsChunkPlugin"</span>);<span class="comment">//提取多个页面之间的公共模块</span></div><div class="line"><span class="built_in">module</span>.exports = &#123; <span class="comment">//模块接口用于单独的定义，返回数据类型</span></div><div class="line">    entry: &#123;</div><div class="line">        index: <span class="string">'./src/component/index'</span>,<span class="comment">//单入口 (默认会找index.js)</span></div><div class="line">        about: [<span class="string">'./src/component/about/a.js'</span>, <span class="string">'./src/component/about/b.js'</span>], <span class="comment">//多入口文件只打包一个文件（支持数组形式）</span></div><div class="line">        header: <span class="string">'./src/component/header'</span>,<span class="comment">//定义可复用的模块header</span></div><div class="line">        footer: <span class="string">'./src/component/footer'</span>,<span class="comment">//定义可复用的模块footer</span></div><div class="line">    &#125;,</div><div class="line">    output: &#123; <span class="comment">//输出接口</span></div><div class="line">        path: <span class="string">'./build'</span>, <span class="comment">//输出路径</span></div><div class="line">        filename: <span class="string">'[name].[hash].js'</span> <span class="comment">//合并后输出的文件名为build.js （[hash]为生成Hash值防止缓存）</span></div><div class="line">    &#125;,</div><div class="line">    <span class="built_in">module</span>: &#123;</div><div class="line">        loaders: [</div><div class="line">            <span class="comment">// 样式动态插入html style标签里</span></div><div class="line">            <span class="comment">//.css 文件使用 style-loader 和 css-loader 来处理</span></div><div class="line">            &#123; test: <span class="regexp">/\.css$/</span>, loader: <span class="string">'style-loader!css-loader'</span> &#125;,</div><div class="line">            <span class="comment">//.scss 文件使用 style-loader、css-loader 和 sass-loader 和autoprefixer 兼容css后缀 来编译处理</span></div><div class="line">            &#123; test: <span class="regexp">/\.scss$/</span>, loader: <span class="string">'style!css!autoprefixer?&#123;browsers:["Firefox &gt;= 20","&gt; 5%","last 2 versions"]&#125;'</span>&#125;,</div><div class="line">            <span class="comment">//图片文件使用 url-loader 来处理，小于40kb的直接转为base64</span></div><div class="line">            &#123; test: <span class="regexp">/\.(png|jpg)$/</span>, loader: <span class="string">'url-loader?limit=40000'</span>&#125;,</div><div class="line">        ]</div><div class="line">    &#125;,</div><div class="line">    plugins: [ <span class="comment">//plugins是个插件项</span></div><div class="line">        <span class="keyword">new</span> HtmlwebpackPlugin(&#123;<span class="comment">//html-webpack-plugin 自定生成.html文件</span></div><div class="line">            title: <span class="string">'Hello World'</span></div><div class="line">        &#125;),</div><div class="line">        <span class="keyword">new</span> CommonsChunkPlugin(<span class="string">"common.js"</span>, [<span class="string">"header"</span>, <span class="string">"footer"</span>]),<span class="comment">//自定义公共模块提取,并将该模块打包为 common.js</span></div><div class="line">    ],</div><div class="line"></div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p><code>效果如下图：</code><br><img src="https://ohv0hyr4v.qnssl.com/D1FEFD58-7B5B-49FF-A4D2-681AEB0F8AB9.png" alt=""></p>
<hr>
<h3 id="单独打包样式文件"><a href="#单独打包样式文件" class="headerlink" title="单独打包样式文件"></a>单独打包样式文件</h3><p>有时候可能希望项目的样式能不要被打包到<code>style</code>标签里，而是独立出来作为<code>.css</code>，然后在页面中以<code>&lt;link&gt;</code>标签引入。这时候我们需要 ! 来帮忙<a href="https://github.com/webpack/extract-text-webpack-plugin" target="_blank" rel="external">extract-text-webpack-plugin</a></p>
<p><code>配置config文件</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> ExtractTextPlugin = <span class="built_in">require</span>(<span class="string">"extract-text-webpack-plugin"</span>);<span class="comment">//单独打包css模块</span></div><div class="line"></div><div class="line"><span class="built_in">module</span>: &#123;</div><div class="line">    loaders: [</div><div class="line">        <span class="comment">// ExtractTextPlugin.extract()动态输出Link标签</span></div><div class="line">        &#123; test: <span class="regexp">/\.css$/</span>, loader: ExtractTextPlugin.extract(<span class="string">"style-loader"</span>, <span class="string">"css-loader"</span>) &#125;</div><div class="line">        &#123; test: <span class="regexp">/\.scss$/</span>, loader: ExtractTextPlugin.extract(<span class="string">'css!sass!autoprefixer?&#123;browsers:["Firefox &gt;= 20","&gt; 5%","last 2 versions"]&#125;'</span>) &#125;</div><div class="line">    ]</div><div class="line">&#125;,</div><div class="line">plugins: [ <span class="comment">//plugins是个插件项</span></div><div class="line">    <span class="keyword">new</span> HtmlwebpackPlugin(&#123;<span class="comment">//html-webpack-plugin 自定生成.html文件</span></div><div class="line">        title: <span class="string">'Hello World'</span></div><div class="line">    &#125;),</div><div class="line">    <span class="keyword">new</span> CommonsChunkPlugin(<span class="string">"common.js"</span>, [<span class="string">"header"</span>, <span class="string">"footer"</span>]),<span class="comment">//自定义公共模块提取,并将该模块打包为 common.js</span></div><div class="line">    <span class="keyword">new</span> ExtractTextPlugin(<span class="string">"[name].css"</span>)</div><div class="line">],</div></pre></td></tr></table></figure></p>
<hr>
<h2 id="webpack踩坑"><a href="#webpack踩坑" class="headerlink" title="webpack踩坑"></a>webpack踩坑</h2><h3 id="webpack报错（环境变量）"><a href="#webpack报错（环境变量）" class="headerlink" title="webpack报错（环境变量）"></a>webpack报错（环境变量）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.js:<span class="number">340</span></div><div class="line"><span class="keyword">throw</span> err;</div><div class="line">canot find <span class="built_in">module</span> <span class="string">'webpack/lib/node/NodeTemplatePlugin'</span></div></pre></td></tr></table></figure>
<p>没有找到这个模块？，<code>cd ls</code>顺着路径去下面找，该依赖模块安装了。<br>Google了下，路径设置的问题。<a href="https://segmentfault.com/a/1190000002478924" target="_blank" rel="external">具体解决方案</a>。</p>
<p><strong> 是因为我们没有设置环境变量 </strong></p>
<p><code>vim ~/.zshrc 后加入下面这段话</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> NODE_PATH=<span class="string">"/usr/local/node_modules:/usr/local/lib/node_modules"</span></div></pre></td></tr></table></figure></p>
<p>2.配置 <code>webpack.config.js</code></p>
<h3 id="npm-install报错"><a href="#npm-install报错" class="headerlink" title="npm install报错"></a>npm install报错</h3><p><code>如图：</code><br><img src="https://ohv0hyr4v.qnssl.com/51821093-A30C-4EA6-A493-FA94A6047A6D.png" alt=""></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm ERR! install Couldn<span class="string">'t read dependencies</span></div></pre></td></tr></table></figure>
<p>不能读取依赖的 <code>package.json</code>文件，仔细查看配置文件是否哪里写错了！</p>
<hr>
<blockquote>
<p>案例代码地址： <a href="https://github.com/VuePack/webpack_learn" target="_blank" rel="external">webpack_learn</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img class=&quot;full-image&quot; src=&quot;https://ohv0hyr4v.qnssl.com/webpack.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;迫于前端技术的迭代速度快，为了快速的开发和新技术的研究，学习记录下。&lt;/p&gt;
&lt;h2 id=&quot;webpack学习&quot;&gt;&lt;a href=&quot;#webpack学习&quot; class=&quot;headerlink&quot; title=&quot;webpack学习&quot;&gt;&lt;/a&gt;webpack学习&lt;/h2&gt;&lt;p&gt;&lt;code&gt;构建流程&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先创建 &lt;code&gt;webpack&lt;/code&gt;目录，使用 &lt;code&gt;npm init&lt;/code&gt;命令初始化依赖配置文件&lt;/li&gt;
&lt;li&gt;新建&lt;code&gt;webpack.config.js&lt;/code&gt;的文件，&lt;code&gt;webpack&lt;/code&gt;是根据&lt;code&gt;config&lt;/code&gt;文件里面描述的内容对一个项目进行处理事情&lt;/li&gt;
&lt;li&gt;创建项目目录结构&lt;/li&gt;
&lt;li&gt;根据项目配置&lt;code&gt;wenpack.config.js&lt;/code&gt;文件，并&lt;code&gt;npm install&lt;/code&gt;安装项目所需依赖模块&lt;/li&gt;
&lt;li&gt;终端执行编译完成自动化构建&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="webpack" scheme="http://likr.cn/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>JS查找数组中是否存在某个元素</title>
    <link href="http://likr.cn/2016/04/12/JS%E6%9F%A5%E6%89%BE%E6%95%B0%E7%BB%84%E4%B8%AD%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E6%9F%90%E4%B8%AA%E5%85%83%E7%B4%A0/"/>
    <id>http://likr.cn/2016/04/12/JS查找数组中是否存在某个元素/</id>
    <published>2016-04-12T13:54:27.000Z</published>
    <updated>2016-05-17T12:07:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-函数方法定义"><a href="#1-函数方法定义" class="headerlink" title="1.函数方法定义"></a>1.函数方法定义</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">contains</span>(<span class="params">arr, obj</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> i = arr.length;</div><div class="line">    <span class="keyword">while</span> (i--) &#123;</div><div class="line">        <span class="keyword">if</span> (arr[i] === obj) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</div><div class="line">contains(arr, <span class="number">2</span>);<span class="comment">//返回true</span></div><div class="line">contains(arr, <span class="number">4</span>);<span class="comment">//返回false</span></div></pre></td></tr></table></figure>
<h2 id="2-定义原型"><a href="#2-定义原型" class="headerlink" title="2.定义原型"></a>2.定义原型</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Array</span>.prototype.contains = <span class="function"><span class="keyword">function</span> (<span class="params">obj</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> i = <span class="keyword">this</span>.length;</div><div class="line">    <span class="keyword">while</span> (i--) &#123;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>[i] === obj) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].contains(<span class="number">2</span>); <span class="comment">//返回true</span></div><div class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].contains(<span class="string">'2'</span>); <span class="comment">//返回false</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-函数方法定义&quot;&gt;&lt;a href=&quot;#1-函数方法定义&quot; class=&quot;headerlink&quot; title=&quot;1.函数方法定义&quot;&gt;&lt;/a&gt;1.函数方法定义&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://likr.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>理解jsonP的原理和优缺点</title>
    <link href="http://likr.cn/2016/03/28/%E7%90%86%E8%A7%A3jsonP%E7%9A%84%E5%8E%9F%E7%90%86%E5%92%8C%E4%BC%98%E7%BC%BA%E7%82%B9/"/>
    <id>http://likr.cn/2016/03/28/理解jsonP的原理和优缺点/</id>
    <published>2016-03-28T13:11:00.000Z</published>
    <updated>2016-05-17T12:07:33.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.cnblogs.com/dowinning/archive/2012/04/19/json-jsonp-jquery.html" target="_blank" rel="external">JSONP</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/dowinning/archive/2012/04/19/json-jsonp-jquery.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JSONP&lt;/a&gt;&lt;/p&gt;

    
    </summary>
    
    
      <category term="jsonp" scheme="http://likr.cn/tags/jsonp/"/>
    
  </entry>
  
  <entry>
    <title>凯锅的小梦想</title>
    <link href="http://likr.cn/2016/02/22/%E5%87%AF%E9%94%85%E7%9A%84%E5%B0%8F%E6%A2%A6%E6%83%B3/"/>
    <id>http://likr.cn/2016/02/22/凯锅的小梦想/</id>
    <published>2016-02-22T12:59:03.000Z</published>
    <updated>2016-05-19T08:37:42.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br>小小的凯锅，大大的小梦想<br>两年内实现，加油！<br></blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;小小的凯锅，大大的小梦想&lt;br&gt;两年内实现，加油！&lt;br&gt;&lt;/blockquote&gt;

    
    </summary>
    
    
      <category term="心情语录" scheme="http://likr.cn/tags/%E5%BF%83%E6%83%85%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>云南记</title>
    <link href="http://likr.cn/2016/01/28/%E4%BA%91%E5%8D%97%E8%AE%B0/"/>
    <id>http://likr.cn/2016/01/28/云南记/</id>
    <published>2016-01-28T13:45:26.000Z</published>
    <updated>2016-12-08T09:43:47.000Z</updated>
    
    <content type="html"><![CDATA[<p><img class="full-image" src="https://ohv0hyr4v.qnssl.com/banner-yun.jpg"></p>
<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><blockquote class="blockquote-center"><br>很久就一直想去云南<br>一场说走就走的旅行<br>会一直更新途中的新鲜事情<br></blockquote>


<h2 id="目的地"><a href="#目的地" class="headerlink" title="目的地"></a>目的地</h2><ul>
<li>丽江 &gt; 大理 &gt; 昆明</li>
</ul>
<h2 id="旅游安排："><a href="#旅游安排：" class="headerlink" title="旅游安排："></a>旅游安排：</h2><ul>
<li>第一天{1.30}：中午到，去拉市海骑马划船，晚上回丽江古镇（包括逛）</li>
<li>第二三天{1.31~2.1}：香格里拉二日游</li>
<li>第四五天{2.2~2.3}：泸沽湖二日游</li>
<li>第六七八天{2.4~2.7}：大理二日游半</li>
</ul>
<a id="more"></a>
<h2 id="第一天："><a href="#第一天：" class="headerlink" title="第一天："></a>第一天：</h2><p>7：30的飞机，大概中午12：30到。good day。<br>之前定好了客栈，本来想做大巴去丽江古镇，但好久没做车了晕车，中途要转2趟车，预计50分钟左右；<br>后来就打了黑车，用了45元，本先想去丽江古镇客栈的，妈蛋。这黑心师傅说要接个客人去拉市海，我本来就打算下午去<strong> 拉市海骑马 </strong>，师傅说顺便就带我过去吧，价钱一样。心里暗喜了下。<br>妈的，这家伙好样的，尽然和拉市海骑马景点估计一家子啊，看了下景点报价，分好几个档次，最贵的680，最便宜的148，我报了个中等的480元，坑啊~<br>这边要注意的是正宗的<strong> 茶马古道 </strong>旅游项目，只有3个。其他都是假冒的。<br>回到景点才知道，本地报个团只要80就可以玩遍所有项目了~~<br>他们所说的<strong> 茶马古道 </strong>其实是人工铺设修建，这边要注意哦。第一次骑马，超兴奋的说，虽然花了480元，但一上马我就不由自主的笑起来了，好久没这么开心了。走着羊肠小道</p>
<p><img src="https://ohv0hyr4v.qnssl.com/IMG_0608.JPG" alt="拉市海骑马风景"><br><img src="https://ohv0hyr4v.qnssl.com/IMG_0607.JPG" alt="拉市海骑马我"><br><img src="https://ohv0hyr4v.qnssl.com/IMG_0610.JPG" alt="拉市海骑马吃鱼"><br><img src="https://ohv0hyr4v.qnssl.com/IMG_0609.JPG" alt="拉市海骑马湖"><br><img src="https://ohv0hyr4v.qnssl.com/IMG_0611.JPG" alt="拉市海骑马渔夫"></p>
<h2 id="第二、三天"><a href="#第二、三天" class="headerlink" title="第二、三天"></a>第二、三天</h2><p>自从第一次去了 <strong> 丽江古镇 </strong>，就留了心去当地报了散团。货比三家，<strong> 香格里拉 </strong>200再加了<strong> 泸沽湖 </strong>250。<br>虽然这个季节不是最美的<strong> 香格里拉 </strong>，听导游说5月下旬~8月，是最美的季节。满山遍地都开满了花。话说第一次上高海拔，不过身体棒棒，也没怎么高原反应。沿途经过了<strong> 虎跳峡 </strong>，<strong> 独克宗月光古城 </strong>（那边的大金钟是迪尼斯记录的哦），下午去了<strong> 石卡雪山 </strong>（可惜石卡雪山峰顶在维修，上不了，到那边还是挺失望的，一大片的雪没什么可玩的，就和小伙伴人滚雪去了~）；<br>晚上的特色名族藏家风情 晚会，喝了本地最有特色的<code>玛卡酒</code>、<code>青稞酒</code>、<code>酥油茶</code>，还尝试做了<code>青稞粉</code>。看了他们的民族风情舞蹈。<br>总结<strong> 藏族人 </strong>给我的感觉就是特别好爽，直肠子，想说就说，一壶酒说干就干，挺热情好客的。藏族人吃的比较简单，比较朴实，海拔比较高，种植范围可选性比较局限性，那他们靠什么摄取维生素呢？他们靠的是<code>酥油茶</code>。<strong> 藏族人 </strong>认为水和阿爸阿妈的生命一样宝贵，尊敬。他们称男的叫 <strong> 扎西 </strong>，女的叫<strong> 卓玛 </strong>。如果一个藏族人对你说 <strong> 扎西德勒 </strong>，那你也应该回应说 <strong> 扎西德勒 too </strong>，代表欢迎，祝福吉祥的意思。</p>
<p><img src="https://ohv0hyr4v.qnssl.com/IMG_0034.JPG" alt="青稞酒"><br><img src="https://ohv0hyr4v.qnssl.com/IMG_0033.JPG" alt="牛肉"><br><img src="https://ohv0hyr4v.qnssl.com/IMG_0030.JPG" alt="鸡翅"><br><img src="https://ohv0hyr4v.qnssl.com/IMG_0024.JPG" alt="虎跳崖"></p>
<video src="http://mvvideo2.meitudata.com/56ae033211e3c1066.mp4" width="100%" controls="controls"></video>



<h2 id="第四、五天"><a href="#第四、五天" class="headerlink" title="第四、五天"></a>第四、五天</h2><p>早上5点半起的床，历时6个小时，翻山越岭，翻过五座大山，来到这个美丽的湖畔。做着小巴车，路过<strong>金沙江</strong> - <strong> 小凉山观景台 </strong> - <strong> 情人滩 </strong> - <strong> 里格半岛 </strong> - <strong> 尼塞 </strong> - <strong> 万亩草海 </strong> - <strong> 走婚桥 </strong>（说到走婚桥，这边的习俗一男一女只要牵着走过走婚桥晚上就可以啪啪啪😄）- <strong> 午大落水 </strong>。<br>下午到游船码头划船到泸沽湖游玩。<br>泸沽湖畔住着<strong> 摩梭人 </strong>，一个非常特色的名族。相比我们汉族，他们是女性主义社会，一个母系大社会。主要特产品有<code>酥理玛酒</code>、<code>猪膘肉</code>、<code>咣当酒</code>、<code>烤鱼干</code>。<code>猪膘肉</code>有点肥，没吃。</p>
<p><strong> 泸沽湖 </strong>属于高山盆地，最低海拔2668米，最高海拔3300米。<br><strong> 摩梭人 </strong>当地人信奉<strong> 藏医文化 </strong>，从不去什么医院，当地有有名的阿妈就诊。她们以银器判断是否含有毒物质，喝的水也是当地的水质用银器来净化，<strong> 藏医文化 </strong> 感觉挺有趣耐人寻味的，回去会研究研究。<br>听着最新鲜的当然是<strong> 走婚习俗 </strong>，走婚是摩梭人的一种婚姻模式，分暗婚和明婚。如果你看中哪个<strong> 卓玛 </strong>，在她手心扣三下，她如果看中你，也会同样在你手心回扣三下。那么在约好女子后，会在半夜的时候爬到女子的“花楼”，天亮的时候必须离开。<br>摩梭人是母系社会，男性称女朋友为“阿夏”，女性称男朋友为“阿注”。老公可以叫<strong> 阿乖 </strong>，他们不叫 <strong> 老公 </strong>，因为<strong> 公 </strong>是公共的意思。在摩梭人最隆重、最热烈、最欢乐的<strong> 格母女神 </strong>的庆典——转山节中尽情地唱，尽情地跳，尽情地享受生活的甘甜。<br>其他了解的还不是很多，我想以后还会来的。</p>
<p><img src="https://ohv0hyr4v.qnssl.com/IMG_0600.JPG" alt="泸沽湖日出"><br><img src="https://ohv0hyr4v.qnssl.com/IMG_0601.JPG" alt="泸沽湖鳄鱼岛"><br><img src="https://ohv0hyr4v.qnssl.com/IMG_0605.JPG" alt="泸沽湖碧波荡漾"><br><img src="https://ohv0hyr4v.qnssl.com/IMG_0604.JPG" alt="泸沽湖划船"><br><img src="https://ohv0hyr4v.qnssl.com/IMG_0606.JPG" alt="泸沽湖走婚桥"><br><img src="https://ohv0hyr4v.qnssl.com/IMG_0016.JPG" alt="走婚桥"><br><img src="https://ohv0hyr4v.qnssl.com/IMG_0017.JPG" alt="开心"><br><img src="https://ohv0hyr4v.qnssl.com/IMG_0035.JPG" alt="摩挲族"></p>
<video src="http://mvvideo2.meitudata.com/56b0b82074d7e1829.mp4" width="100%" controls="controls"></video>




<h2 id="第六、七八天"><a href="#第六、七八天" class="headerlink" title="第六、七八天"></a>第六、七八天</h2><p>早上9点半出发，出发路线从 <strong> 苍山 </strong>（报的团旅程时间比较少，就逛了会有点遗憾没到顶峰） - <strong> 双廊</strong>（这是个被炒作起来的地方，商业化气息非常严重，很多地方都在不断的扩展，给我的印象就是菜市场印象很差）  - <strong> 地热国</strong> （就去泡温泉没去泡嫌弃~~~） - <strong> 洱海豪华游轮</strong> （看了白族的 <code>三道茶</code>表演，去了风情岛，沿途看了洱海景色和海鸥） - <strong> 三塔 </strong>（一般般，地方比较大有些地方现在还不能进入）</p>
<p>大理三分之一住着 <strong> 白族 </strong>，白族男的称为 <code>阿鹏</code>，女的称呼 <code>金花</code>；<br>比较有名的茶是 <code>普洱茶</code> ，<code>春夏秋冬</code>,当地比较有名的表演属 <code>三道茶</code>；</p>
<p><img src="https://ohv0hyr4v.qnssl.com/IMG_0597.JPG" alt="洱海鸽子"><br><img src="https://ohv0hyr4v.qnssl.com/IMG_0598.JPG" alt="大理古镇"><br><img src="https://ohv0hyr4v.qnssl.com/IMG_0599.JPG" alt="情人沙滩"></p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>此次旅游很完美，遇到一些走心的驴友一起疯狂一起嗨，去了摩梭族藏族白族体验了当地的民族文化。 之前打算玩半个月，后来水土不服实在有点吃不消了就玩了八天。<br>回来飞机路上还遇到一个云南做生意的朋友，感觉挺投缘聊的不错，下飞机还送了几包云南我不知道的特色小吃。</p>
<p>下次再来，想去看看希望小学的学生~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img class=&quot;full-image&quot; src=&quot;https://ohv0hyr4v.qnssl.com/banner-yun.jpg&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink&quot; title=&quot;前言：&quot;&gt;&lt;/a&gt;前言：&lt;/h2&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;很久就一直想去云南&lt;br&gt;一场说走就走的旅行&lt;br&gt;会一直更新途中的新鲜事情&lt;br&gt;&lt;/blockquote&gt;


&lt;h2 id=&quot;目的地&quot;&gt;&lt;a href=&quot;#目的地&quot; class=&quot;headerlink&quot; title=&quot;目的地&quot;&gt;&lt;/a&gt;目的地&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;丽江 &amp;gt; 大理 &amp;gt; 昆明&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;旅游安排：&quot;&gt;&lt;a href=&quot;#旅游安排：&quot; class=&quot;headerlink&quot; title=&quot;旅游安排：&quot;&gt;&lt;/a&gt;旅游安排：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;第一天{1.30}：中午到，去拉市海骑马划船，晚上回丽江古镇（包括逛）&lt;/li&gt;
&lt;li&gt;第二三天{1.31~2.1}：香格里拉二日游&lt;/li&gt;
&lt;li&gt;第四五天{2.2~2.3}：泸沽湖二日游&lt;/li&gt;
&lt;li&gt;第六七八天{2.4~2.7}：大理二日游半&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="心情语录" scheme="http://likr.cn/tags/%E5%BF%83%E6%83%85%E8%AF%AD%E5%BD%95/"/>
    
      <category term="旅游" scheme="http://likr.cn/tags/%E6%97%85%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>JS控制cookie，选中复选框下次不再提醒</title>
    <link href="http://likr.cn/2016/01/08/JS%E6%8E%A7%E5%88%B6cookie%EF%BC%8C%E9%80%89%E4%B8%AD%E5%A4%8D%E9%80%89%E6%A1%86%E4%B8%8B%E6%AC%A1%E4%B8%8D%E5%86%8D%E6%8F%90%E9%86%92/"/>
    <id>http://likr.cn/2016/01/08/JS控制cookie，选中复选框下次不再提醒/</id>
    <published>2016-01-08T14:27:15.000Z</published>
    <updated>2016-05-17T13:11:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>应用场景：<br>每次按钮点击弹出一个对话框，选中复选框下次不再提醒：</p>
<p>解决思路：<br>获取需要点击的DOM节点为<code>checkbox</code>，判断<code>checkbox</code>选中后是否为<code>true</code>,<br>当为<code>true</code>,当前内容存入一个<code>cookie</code>值，<br>用<code>if</code>语句判断，如果下次有<code>cookie</code>值，不再提示，否则反之。</p>
<p>html代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"result_checkbox"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"按钮"</span> <span class="attr">placeholder</span>=<span class="string">""</span>&gt;</span>下次不提醒我</div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"create_result"</span>&gt;</span>刷新在看看<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>JS代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//设置cookie</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">setCookie</span>(<span class="params">name, value</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> exp = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line">    exp.setTime(exp.getTime() + <span class="number">1</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>); <span class="comment">//有效期1小时</span></div><div class="line">    <span class="built_in">document</span>.cookie = name + <span class="string">"="</span> + <span class="built_in">escape</span>(value) + <span class="string">";expires="</span> + exp.toGMTString();</div><div class="line">&#125;</div><div class="line"><span class="comment">//取cookies函数</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">name</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> arr = <span class="built_in">document</span>.cookie.match(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^| )"</span> + name + <span class="string">"=([^;]*)(;|$)"</span>));</div><div class="line">    <span class="keyword">if</span> (arr != <span class="literal">null</span>) <span class="keyword">return</span> <span class="built_in">unescape</span>(arr[<span class="number">2</span>]);</div><div class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> checkbox = <span class="built_in">document</span>.getElementById(<span class="string">'result_checkbox'</span>);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (getCookie(<span class="string">"closepop"</span>) == <span class="number">0</span>) &#123;</div><div class="line">        $(<span class="string">"#create_result"</span>).hide();</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        $(<span class="string">"#create_result"</span>).show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    $(<span class="string">'#result_checkbox'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (checkbox.checked) &#123;</div><div class="line">            setCookie(<span class="string">"closepop"</span>,<span class="string">"0"</span>)</div><div class="line">            <span class="built_in">console</span>.log(<span class="string">'选中'</span>)</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="string">'没选中'</span>)</div><div class="line">        &#125;</div><div class="line">    &#125;)</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;应用场景：&lt;br&gt;每次按钮点击弹出一个对话框，选中复选框下次不再提醒：&lt;/p&gt;
&lt;p&gt;解决思路：&lt;br&gt;获取需要点击的DOM节点为&lt;code&gt;checkbox&lt;/code&gt;，判断&lt;code&gt;checkbox&lt;/code&gt;选中后是否为&lt;code&gt;true&lt;/code&gt;,&lt;br
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://likr.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Git 速查表</title>
    <link href="http://likr.cn/2016/01/07/git-%E9%80%9F%E6%9F%A5%E8%A1%A8/"/>
    <id>http://likr.cn/2016/01/07/git-速查表/</id>
    <published>2016-01-07T12:56:29.000Z</published>
    <updated>2016-12-08T09:46:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>记性不好，微博上看到不错的一张<code>Git</code>速查表图片。<br>忘记，有空翻翻。</p>
<p><img src="https://ohv0hyr4v.qnssl.com/Git.jpg" class="full-image"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记性不好，微博上看到不错的一张&lt;code&gt;Git&lt;/code&gt;速查表图片。&lt;br&gt;忘记，有空翻翻。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ohv0hyr4v.qnssl.com/Git.jpg&quot; class=&quot;full-image&quot;&gt;&lt;/p&gt;

    
    </summary>
    
    
      <category term="Git" scheme="http://likr.cn/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Markdown主要语法备忘</title>
    <link href="http://likr.cn/2016/01/01/Markdown%E4%B8%BB%E8%A6%81%E8%AF%AD%E6%B3%95%E5%A4%87%E5%BF%98/"/>
    <id>http://likr.cn/2016/01/01/Markdown主要语法备忘/</id>
    <published>2016-01-01T07:36:27.000Z</published>
    <updated>2016-12-08T09:47:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#h1级标题</div><div class="line">##h2级标题</div><div class="line">###h3级标题</div></pre></td></tr></table></figure>
<p><code>演示：</code></p>
<p>#h1级标题</p>
<p>##h2级标题</p>
<p>###h3级标题</p>
<a id="more"></a>
<hr>
<h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[Google](http://www.google.com)//默认写法不显示href，只显示默认的自定义字段</div><div class="line"></div><div class="line">[Google][http://www.google.com]//另一种写法,显示自定义子弹和href</div><div class="line"></div><div class="line">&lt;http://www.google.com&gt;//显示href全称</div></pre></td></tr></table></figure>
<p><code>演示：</code><br><a href="http://www.google.com" target="_blank" rel="external">Google</a></p>
<p>[Google][<a href="http://www.google.com" target="_blank" rel="external">http://www.google.com</a>]</p>
<p><a href="http://www.google.com" target="_blank" rel="external">http://www.google.com</a></p>
<hr>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![这里不显示文字用来备注](https://ohv0hyr4v.qnssl.com/16560643.jpeg)</div></pre></td></tr></table></figure>
<p><code>演示：</code><img src="https://ohv0hyr4v.qnssl.com/16560643.jpeg" alt="这里不显示文字用来备注"></p>
<hr>
<h2 id="字体优化"><a href="#字体优化" class="headerlink" title="字体优化"></a>字体优化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">`Leon`好帅哦~ //字体加重</div></pre></td></tr></table></figure>
<p><code>演示：</code>  <code>Leon</code>好帅哦~</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">*Leon*好可爱哦~ //字体为斜体</div></pre></td></tr></table></figure>
<p><code>演示：</code><em>Leon</em>好可爱哦~</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">**Leon**人真好~ //字体加粗</div></pre></td></tr></table></figure>
<p><code>演示：</code><strong>Leon</strong>人真好~</p>
<hr>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">礼拜一 | 礼拜二</div><div class="line">---   | ---</div><div class="line">语文课 | 体育课</div><div class="line">数学课 | 英语课</div><div class="line">科学课 | 自习课</div></pre></td></tr></table></figure>
<p><code>演示：</code></p>
<table>
<thead>
<tr>
<th>礼拜一</th>
<th>礼拜二</th>
</tr>
</thead>
<tbody>
<tr>
<td>语文课</td>
<td>体育课</td>
</tr>
<tr>
<td>数学课</td>
<td>英语课</td>
</tr>
<tr>
<td>科学课</td>
<td>自习课</td>
</tr>
</tbody>
</table>
<hr>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">- 无需列表1 //无序列表：使用 - 加一个空格（）</div><div class="line">- 无序列表2</div><div class="line">- 无序列表3</div></pre></td></tr></table></figure>
<p><code>演示：</code></p>
<ul>
<li>无需列表1</li>
<li>无序列表2</li>
<li>无序列表3</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1. 有序列表//有序列表：使用 数字 加一个英文句点</div><div class="line">2. 有序列表</div><div class="line">3. 有序列表</div></pre></td></tr></table></figure>
<p><code>演示：</code></p>
<ol>
<li>有序列表</li>
<li>有序列表</li>
<li>有序列表</li>
</ol>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">- 多层嵌套</div><div class="line">    - 二级菜单</div><div class="line">    - 二级菜单</div><div class="line">- 多层嵌套</div><div class="line">    - 二级菜单</div><div class="line">        - 三级菜单</div><div class="line">        - 三级菜单</div><div class="line">    - 二级菜单</div></pre></td></tr></table></figure>
<p><code>演示：</code></p>
<ul>
<li>多层嵌套<ul>
<li>二级菜单</li>
<li>二级菜单</li>
</ul>
</li>
<li>多层嵌套<ul>
<li>二级菜单<ul>
<li>三级菜单</li>
<li>三级菜单</li>
</ul>
</li>
<li>二级菜单</li>
</ul>
</li>
</ul>
<hr>
<h2 id="块"><a href="#块" class="headerlink" title="块"></a>块</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">这里先换行，然后缩进4个空格，之后的内容便可以原样显示了，适合用于显示代码内容。直到文本结束或最后一个存在缩进的行为止。</div></pre></td></tr></table></figure>
<p><code>演示：</code></p>
<pre><code>这里先换行，然后缩进4个空格，之后的内容便可以原样显示了，适合用于显示代码内容。直到文本结束或最后一个存在缩进的行为止。
</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;给引用的文本开始位置都加一个 '&gt;'，</div><div class="line">&gt;便可组成一个块引用。在块引用中，可以结合</div><div class="line">&gt;其他markdown元素一块使用，比如列表。</div><div class="line">&gt;**强调**</div></pre></td></tr></table></figure>
<p><code>演示：</code></p>
<blockquote>
<p>给引用的文本开始位置都加一个 ‘&gt;’，<br>便可组成一个块引用。在块引用中，可以结合<br>其他markdown元素一块使用，比如列表。<br><strong>强调</strong></p>
</blockquote>
<hr>
<p><code>以下是本博客自定义的一些样式列表（注意！）</code></p>
<h2 id="警告块-本博客专用"><a href="#警告块-本博客专用" class="headerlink" title="警告块(本博客专用)"></a>警告块(本博客专用)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tip"</span>&gt;</span></div><div class="line">    预处理器很强大，但它只是编写 CSS 的辅助工具。出于对扩展和维护等方面的考虑，在大型项目中有必要使用预处理器构建 CSS；但是对于小型项目，原生的 CSS 可能是一种更好的选择。不要肆意使用预处理器！</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><code>演示：</code></p>
<div class="tip"><br>    预处理器很强大，但它只是编写 CSS 的辅助工具。出于对扩展和维护等方面的考虑，在大型项目中有必要使用预处理器构建 CSS；但是对于小型项目，原生的 CSS 可能是一种更好的选择。不要肆意使用预处理器！<br></div>

<hr>
<h2 id="展示内容区-本博客专用"><a href="#展示内容区-本博客专用" class="headerlink" title="展示内容区(本博客专用)"></a>展示内容区(本博客专用)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">class</span>=<span class="string">"blockquote-center"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span>展示内容区<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></div></pre></td></tr></table></figure>
<p><code>演示：</code></p>
<blockquote class="blockquote-center"><br>    <br>展示内容区<br><br></blockquote>

<hr>
<h2 id="图片相框模式-本博客专用"><a href="#图片相框模式-本博客专用" class="headerlink" title="图片相框模式(本博客专用)"></a>图片相框模式(本博客专用)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"full-image"</span> <span class="attr">src</span>=<span class="string">"https://ohv0hyr4v.qnssl.com/banner-yun.jpg"</span> /&gt;</span></div></pre></td></tr></table></figure>
<p><code>演示：</code><br><img class="full-image" src="https://ohv0hyr4v.qnssl.com/banner-yun.jpg"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h2&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;#h1级标题&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;##h2级标题&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;###h3级标题&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;演示：&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;#h1级标题&lt;/p&gt;
&lt;p&gt;##h2级标题&lt;/p&gt;
&lt;p&gt;###h3级标题&lt;/p&gt;
    
    </summary>
    
    
      <category term="Markdown" scheme="http://likr.cn/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>凯锅2015年终总结</title>
    <link href="http://likr.cn/2015/12/30/%E5%87%AF%E9%94%852015%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>http://likr.cn/2015/12/30/凯锅2015年终总结/</id>
    <published>2015-12-30T12:00:22.000Z</published>
    <updated>2016-06-01T05:55:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>真快，再过1天，就是2016年了，过完年凯锅就24岁了，又老了😶。。<br>2015年，这一年还是过的挺丰富的，但也过的很慵懒。</p>
<h2 id="回顾下2014年给2015年的计划："><a href="#回顾下2014年给2015年的计划：" class="headerlink" title="回顾下2014年给2015年的计划："></a>回顾下2014年给2015年的计划：</h2><ul>
<li>1.看完《Javascript高级程序设计》等一堆书</li>
<li>2.一场云南的旅游</li>
<li>3.坚持锻炼</li>
<li>4.驾照考出</li>
</ul>
<h2 id="再来看看2015做的"><a href="#再来看看2015做的" class="headerlink" title="再来看看2015做的"></a>再来看看2015做的</h2><ul>
<li><p>1.《JavaScript高级程序设计》啃了一半，书很经典，啃不下去了。<br>看了《JavaScript秘密花园》，嗯嗯 真的很不错，个个经典核心知识都概要了。<br>把之前未看完的《JavaScript DOM编程艺术》看完了。<br>还看了阮一峰老师陆陆续续写的稿书《JavaScript 标准参考教程（alpha）》10% ，说到这书（未出，在他博客上看的），貌似是唯一一本有动力看下去的，讲的很通俗易懂，超棒的说，出了一定买。阮一峰老师是上海财经大学大学教师， - -。人家专业竟然不是计算机，博客包含读书、版权制度、经济学、英语、历史、IT技术。<br>其实我想说凯锅虽然是计算机专业，可是我从小到大文科比较好， - -理科烂 。。。😄</p>
</li>
<li><p>2.说到旅行，一直想去，本来国庆节想去的，家里各种事，又没去成。（未完成：不过延迟到2016年2月不算遗憾  嘿嘿）</p>
</li>
<li><p>3.坚持锻炼，身为有点处女座的白羊座，暴躁又从充满激情，非常喜欢出汗的感觉，夏天达到了，冬天不方面也懒了，陆陆续续吧。不幸的是，最近颈椎很不舒服。听小志同学说，年轻人不要久坐。直到一天，终于那种感觉。。。</p>
</li>
<li><p>4.4月份报的名，貌似6月份科目二一次性通过，后来就一直没去。。 （未完成）</p>
</li>
</ul>
<a id="more"></a>
<h2 id="个人总结："><a href="#个人总结：" class="headerlink" title="个人总结："></a>个人总结：</h2><p>首先说下自己吧，今年人变懒了，以前有强迫症，今天的事情必须完成，还有点小完美癖好。<br>可能家里各种事情，礼拜六礼拜天要么出去学车，要么办事情。<br>也不想给自己找什么借口，就是懒了，没什么状态，批评下。</p>
<p>今年也换了工作，在公司学到了很多。熟悉了公司团队基于<code>tower</code>的工作分配任务细致化，项目管理发布流程，需求评审等等。学习了基于<code>Git</code>版本控制团队协作流程，<code>bug</code>的提交，<code>功能</code>的添加，<code>线下</code>的测试，<code>内容</code>的合并，<code>正式版本</code>的发布等等。<br>尝试思考不同场景的业务逻辑。</p>
<p>这半年来，觉得最爽的是，<strong>40%</strong>的代码，都是<code>JS</code>,而不是<code>html5+css3</code>;<br>虽然知道自己<code>JS</code>现在的写的还挺烂的 ， - - 但谁没经历过，凯锅会写的很优雅的 ，愉快的装下逼 😄</p>
<h2 id="2016计划"><a href="#2016计划" class="headerlink" title="2016计划"></a>2016计划</h2><ul>
<li>1.完成一款基于<code>VUE</code>的webapp,为什么不是<code>react</code>呢,<code>react</code>虽然现在真的很火很火，社区很火爆，显示技术和解决方案也不断的迭代；以前学的可能都已成为过去式，学习成本比较大。就像前前年<code>grunt</code>，去年<code>gulp</code>，今年<code>webpack</code>；前端现在技术迭代太快了，太快了，免不了坑也多。之所以选择<code>vue</code>，双11淘宝用了<code>vue</code>，失少是经得起考验的。第二文档简洁明了易懂，关键代码写的太优美了 赞~</li>
<li>2.还是一场年一次的旅行（地点没想好，一直觉得自己是个自由人，偏执狂，放荡不羁）</li>
<li>3.驾驶证考出（努力努力，争取明年买辆车）</li>
<li>4.想尝试室内设计，（木匠之子就是那么爱捣鼓 😄）</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;真快，再过1天，就是2016年了，过完年凯锅就24岁了，又老了😶。。&lt;br&gt;2015年，这一年还是过的挺丰富的，但也过的很慵懒。&lt;/p&gt;
&lt;h2 id=&quot;回顾下2014年给2015年的计划：&quot;&gt;&lt;a href=&quot;#回顾下2014年给2015年的计划：&quot; class=&quot;headerlink&quot; title=&quot;回顾下2014年给2015年的计划：&quot;&gt;&lt;/a&gt;回顾下2014年给2015年的计划：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;1.看完《Javascript高级程序设计》等一堆书&lt;/li&gt;
&lt;li&gt;2.一场云南的旅游&lt;/li&gt;
&lt;li&gt;3.坚持锻炼&lt;/li&gt;
&lt;li&gt;4.驾照考出&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;再来看看2015做的&quot;&gt;&lt;a href=&quot;#再来看看2015做的&quot; class=&quot;headerlink&quot; title=&quot;再来看看2015做的&quot;&gt;&lt;/a&gt;再来看看2015做的&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.《JavaScript高级程序设计》啃了一半，书很经典，啃不下去了。&lt;br&gt;看了《JavaScript秘密花园》，嗯嗯 真的很不错，个个经典核心知识都概要了。&lt;br&gt;把之前未看完的《JavaScript DOM编程艺术》看完了。&lt;br&gt;还看了阮一峰老师陆陆续续写的稿书《JavaScript 标准参考教程（alpha）》10% ，说到这书（未出，在他博客上看的），貌似是唯一一本有动力看下去的，讲的很通俗易懂，超棒的说，出了一定买。阮一峰老师是上海财经大学大学教师， - -。人家专业竟然不是计算机，博客包含读书、版权制度、经济学、英语、历史、IT技术。&lt;br&gt;其实我想说凯锅虽然是计算机专业，可是我从小到大文科比较好， - -理科烂 。。。😄&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.说到旅行，一直想去，本来国庆节想去的，家里各种事，又没去成。（未完成：不过延迟到2016年2月不算遗憾  嘿嘿）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.坚持锻炼，身为有点处女座的白羊座，暴躁又从充满激情，非常喜欢出汗的感觉，夏天达到了，冬天不方面也懒了，陆陆续续吧。不幸的是，最近颈椎很不舒服。听小志同学说，年轻人不要久坐。直到一天，终于那种感觉。。。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;4.4月份报的名，貌似6月份科目二一次性通过，后来就一直没去。。 （未完成）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="心情语录" scheme="http://likr.cn/tags/%E5%BF%83%E6%83%85%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>强大的zsh</title>
    <link href="http://likr.cn/2015/12/30/%E5%BC%BA%E5%A4%A7%E7%9A%84zsh/"/>
    <id>http://likr.cn/2015/12/30/强大的zsh/</id>
    <published>2015-12-30T10:19:18.000Z</published>
    <updated>2016-06-01T05:54:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装oh-my-zsh"><a href="#安装oh-my-zsh" class="headerlink" title="安装oh-my-zsh"></a>安装<code>oh-my-zsh</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</div></pre></td></tr></table></figure>
<p>用命令检查Mac 检查系统支持哪些终端<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">cat /etc/shells</div><div class="line"></div><div class="line">&lt;!-- 显示结果： --&gt;</div><div class="line">/bin/bash</div><div class="line">/bin/csh</div><div class="line">/bin/ksh</div><div class="line">/bin/sh</div><div class="line">/bin/tcsh</div><div class="line">/bin/zsh</div></pre></td></tr></table></figure></p>
<h2 id="mac中zsh命令-用sublime打开指定文件"><a href="#mac中zsh命令-用sublime打开指定文件" class="headerlink" title="mac中zsh命令,用sublime打开指定文件"></a>mac中<code>zsh</code>命令,用sublime打开指定文件</h2><p><code>zsh</code>配置清单<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">alias</span> subl=<span class="string">"'/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl'"</span></div><div class="line"><span class="built_in">alias</span> nano=<span class="string">"subl"</span></div><div class="line"><span class="built_in">export</span> EDITOR=<span class="string">"subl"</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="built_in">alias</span> <span class="_">-s</span> markdown=subl //指定markdown格式</div><div class="line"><span class="built_in">alias</span> <span class="_">-s</span> md=subl //在命令行直接输入后缀为md的文件名，会在sublime text中打开</div><div class="line"><span class="built_in">alias</span> <span class="_">-s</span> <span class="built_in">log</span>=vim</div><div class="line"><span class="built_in">alias</span> <span class="_">-s</span> txt=vim</div><div class="line"><span class="built_in">alias</span> <span class="_">-s</span> gz=<span class="string">'tar -xzvf'</span> //表示自动解压后缀为 gz 的压缩包</div><div class="line"><span class="built_in">alias</span> <span class="_">-s</span> tgz=<span class="string">'tar -xzvf'</span>//表示自动解压后缀为 tgz 的压缩包</div></pre></td></tr></table></figure></p>
<h2 id="自带插件快捷键"><a href="#自带插件快捷键" class="headerlink" title="自带插件快捷键"></a>自带插件快捷键</h2><p><code>d</code>,按下<code>d</code>命令会显示最近的历史记录<br><code>zsh_stats</code>,按下<code>zsh_stats</code>会显示你的使用频率前 20 的命令</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装oh-my-zsh&quot;&gt;&lt;a href=&quot;#安装oh-my-zsh&quot; class=&quot;headerlink&quot; title=&quot;安装oh-my-zsh&quot;&gt;&lt;/a&gt;安装&lt;code&gt;oh-my-zsh&lt;/code&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight
    
    </summary>
    
    
      <category term="终端" scheme="http://likr.cn/tags/%E7%BB%88%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>flex新旧混合写法兼容安卓微信x5内核</title>
    <link href="http://likr.cn/2015/12/25/flex%E6%96%B0%E6%97%A7%E6%B7%B7%E5%90%88%E5%86%99%E6%B3%95%E5%85%BC%E5%AE%B9%E5%AE%89%E5%8D%93%E5%BE%AE%E4%BF%A1x5%E5%86%85%E6%A0%B8/"/>
    <id>http://likr.cn/2015/12/25/flex新旧混合写法兼容安卓微信x5内核/</id>
    <published>2015-12-25T01:53:27.000Z</published>
    <updated>2016-06-02T08:42:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>众所周知，微信安卓内置浏览器，是腾讯自主研发的x5内核浏览器，其实就是qq浏览器。。。但坑爹的迟迟对<code>CSS3</code>属性兼容性很差，只支持部分css3写法，。目前只支持对<strong>旧版本</strong>的<code>flex</code>；<code>安卓2.3</code>以上的自带的浏览器，都支持<strong>新版</strong>的<code>flex</code>。<br>对于强迫症的我，既想写<strong>新版</strong> <code>flex</code>，又想<strong>旧版</strong>。那就flex新旧混合写法；</p>
<p>兼容写法：<br>定义父级容器的 <strong> display</strong> 属性：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.box</span>&#123;</div><div class="line">    <span class="attribute">display</span>: -webkit-box; <span class="comment">/* 老版本语法: Safari, iOS, Android browser, older WebKit browsers. */</span></div><div class="line">    <span class="attribute">display</span>: -moz-box; <span class="comment">/* 老版本语法: Firefox (buggy) */</span></div><div class="line">    <span class="attribute">display</span>: -ms-flexbox; <span class="comment">/* 混合版本语法: IE 10 */</span></div><div class="line">    <span class="attribute">display</span>: -webkit-flex; <span class="comment">/* 新版本语法: Chrome 21+ */</span></div><div class="line">    <span class="attribute">display</span>: flex; <span class="comment">/* 新版本语法: Opera 12.1, Firefox 22+ */</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>   由于旧版语法并没有列入W3C标准，所以这里不用写 <strong>display:box</strong></p>
<p>以上是手动写，比较麻烦，有木有自动化的呢？</p>
<p>咣咣咣，当然有，用<code>gulp</code>配合 <code>autoprefixer</code> 自动兼容处理浏览器前缀，妈妈再也不用担心各种奇葩不兼容问题啦~~</p>
<p>部分<code>gulp</code>配置</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);<span class="comment">//引入gulp</span></div><div class="line"><span class="keyword">var</span> autoprefixer = <span class="built_in">require</span>(<span class="string">'gulp-autoprefixer'</span>);<span class="comment">//自动兼容处理浏览器前缀</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//css3混合添加前缀</span></div><div class="line">gulp.task(<span class="string">'autocss'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    gulp.src(<span class="string">'time-line/skin/modules/model-detail.css'</span>)</div><div class="line">    .pipe(autoprefixer(&#123;</div><div class="line">        browsers: [<span class="string">'Firefox &gt;= 20'</span>,<span class="string">'&gt; 5%'</span>,<span class="string">'last 2 versions'</span>],</div><div class="line">        cascade: <span class="literal">false</span>, <span class="comment">//是否美化属性值 默认：true 像这样：</span></div><div class="line">        <span class="comment">//-webkit-transform: rotate(45deg);</span></div><div class="line">        <span class="comment">//        transform: rotate(45deg);</span></div><div class="line">        remove:<span class="literal">true</span> <span class="comment">//是否去掉不必要的前缀 默认：true</span></div><div class="line">    &#125;))</div><div class="line">    .pipe(gulp.dest(<span class="string">'time-line/css'</span>));</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;众所周知，微信安卓内置浏览器，是腾讯自主研发的x5内核浏览器，其实就是qq浏览器。。。但坑爹的迟迟对&lt;code&gt;CSS3&lt;/code&gt;属性兼容性很差，只支持部分css3写法，。目前只支持对&lt;strong&gt;旧版本&lt;/strong&gt;的&lt;code&gt;flex&lt;/code&gt;；&lt;cod
    
    </summary>
    
    
      <category term="微信开发" scheme="http://likr.cn/tags/%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91/"/>
    
      <category term="CSS3" scheme="http://likr.cn/tags/CSS3/"/>
    
  </entry>
  
  <entry>
    <title>前端工具</title>
    <link href="http://likr.cn/2015/12/06/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/"/>
    <id>http://likr.cn/2015/12/06/前端工具/</id>
    <published>2015-12-06T07:40:09.000Z</published>
    <updated>2016-12-08T09:44:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="babel编译"><a href="#babel编译" class="headerlink" title="babel编译"></a>babel编译</h2><p><code>Babel</code> 是一个 JavaScript 的编译工具，它可以把一种形式的 JavaScript 转换成另一种形式的 JavaScript 。比如它可以把 <code>es6</code> 的 JavaScript 编译成现在主要浏览器使用的 <code>es5</code> 的 JavaScript 。这样我们就可以从现在开始，使用 es6 提供的一些新功能去创建应用了，然后用 <code>babel</code> 把它变成 <code>es5</code> 的样子。</p>
<p>另外 <code>Babel</code> 还支持 <strong>JSX .. React</strong> 的团队决定使用 <code>Babel</code> 替代自己的 <strong>JSX</strong> 编译工具。</p>
<p>有些其它的前端工具里面也会用到 <code>babel</code> 这个工具 .. 比如 <strong>jspm ，webpack </strong>等等 .. 在使用这些工具的时候，你可能不需要单独去安装配置 <code>babel</code> ..</p>
<p>注意我这边安装时是最新的<strong>babel6</strong>,新版的<strong>babel6</strong>跟以前不一样，<strong>babel6</strong>拆分成两个包：<code>babel-cli</code>和<code>babel-core</code>;<br>具体安装编译步骤：<br><a id="more"></a></p>
<ul>
<li><p>1.安装babel命令行工具：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g babel@<span class="number">5</span><span class="comment">//这边注意我安装是babel5不是babel6版本</span></div></pre></td></tr></table></figure>
</li>
<li><p>2.在项目文件下创建依赖配置文件：</p>
  <figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm init;<span class="comment">//创建一个package.json模块依赖配置文件</span></div></pre></td></tr></table></figure>
</li>
<li><p>3.创建es6的JS文件比如：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">'use strict'</span>;</div><div class="line"></div><div class="line"><span class="keyword">let</span> breakfast = (dessert,drink) =&gt; dessert + drink;</div></pre></td></tr></table></figure>
</li>
<li><p>5.使用命令编译es6文件：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">babel script.js</div></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>终端编译结果：</strong><br><img src="https://ohv0hyr4v.qnssl.com/es5.png" alt="babel"></p>
<h2 id="jspm"><a href="#jspm" class="headerlink" title="jspm"></a>jspm</h2><p>JavaScript 模块的写法有几种，比如 AMD，CommonJS .. 还有标准化的 ES6 的写法 .. jspm 支持加载所有的用这些方法写的 JavaScript 模块 ..</p>
<p>在你的应用里，现在就可以使用 ES6 提供的标准写法 .. 至于怎么去载入模块可以交给 jspm 去处理 .. 也就是你只需要了解 ES6 的模块写法 ..</p>
<p>jspm 还是一个为浏览器上用的东西准备的一个包管理 .. 比如它可以让你去从不同的源去安装不同的包 .. 默认的源有 npm ，还有 github .. 安装好你需要的包以后，在你的代码里，只需要一行代码，就可以使用这些包提供的功能 .. 不用担心其它的事情 . .</p>
<p>在开发的时候，jspm 可以使用 Traceur 或者 Babel ，实时的在浏览器上编译 JavaScript ，把 es6 的代码编译成 es5 的代码 ..</p>
<p>在正式发布应用的时候，可以优化创建的模块，把模块依赖的东西打成一个包。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install jspm -g<span class="comment">//全局环境下</span></div><div class="line">npm install jspm --save-dev<span class="comment">//项目局部环境下</span></div></pre></td></tr></table></figure>
<p>在项目更目录添加jspm后，还需要创建一个jspm需要的配置文件：<br>输入：<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">jspm init</span></div></pre></td></tr></table></figure></p>
<ul>
<li><p>config.js: 这个文件是 jspm 需要的配置文件 .. 里面有一些配置信息 ..</p>
</li>
<li><p>jspm_packages:目录下面是用 jspm 安装的一些包 ..</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;babel编译&quot;&gt;&lt;a href=&quot;#babel编译&quot; class=&quot;headerlink&quot; title=&quot;babel编译&quot;&gt;&lt;/a&gt;babel编译&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Babel&lt;/code&gt; 是一个 JavaScript 的编译工具，它可以把一种形式的 JavaScript 转换成另一种形式的 JavaScript 。比如它可以把 &lt;code&gt;es6&lt;/code&gt; 的 JavaScript 编译成现在主要浏览器使用的 &lt;code&gt;es5&lt;/code&gt; 的 JavaScript 。这样我们就可以从现在开始，使用 es6 提供的一些新功能去创建应用了，然后用 &lt;code&gt;babel&lt;/code&gt; 把它变成 &lt;code&gt;es5&lt;/code&gt; 的样子。&lt;/p&gt;
&lt;p&gt;另外 &lt;code&gt;Babel&lt;/code&gt; 还支持 &lt;strong&gt;JSX .. React&lt;/strong&gt; 的团队决定使用 &lt;code&gt;Babel&lt;/code&gt; 替代自己的 &lt;strong&gt;JSX&lt;/strong&gt; 编译工具。&lt;/p&gt;
&lt;p&gt;有些其它的前端工具里面也会用到 &lt;code&gt;babel&lt;/code&gt; 这个工具 .. 比如 &lt;strong&gt;jspm ，webpack &lt;/strong&gt;等等 .. 在使用这些工具的时候，你可能不需要单独去安装配置 &lt;code&gt;babel&lt;/code&gt; ..&lt;/p&gt;
&lt;p&gt;注意我这边安装时是最新的&lt;strong&gt;babel6&lt;/strong&gt;,新版的&lt;strong&gt;babel6&lt;/strong&gt;跟以前不一样，&lt;strong&gt;babel6&lt;/strong&gt;拆分成两个包：&lt;code&gt;babel-cli&lt;/code&gt;和&lt;code&gt;babel-core&lt;/code&gt;;&lt;br&gt;具体安装编译步骤：&lt;br&gt;
    
    </summary>
    
    
      <category term="前端工具" scheme="http://likr.cn/tags/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
</feed>
